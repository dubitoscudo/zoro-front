"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_web3-onboard_hw-common_dist_index_js"],{

/***/ "(app-pages-browser)/./node_modules/@web3-onboard/hw-common/dist/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@web3-onboard/hw-common/dist/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   accountSelect: function() { return /* binding */ accountSelect; },\n/* harmony export */   bigNumberFieldsToStrings: function() { return /* binding */ bigNumberFieldsToStrings; },\n/* harmony export */   entryModal: function() { return /* binding */ entryModal; },\n/* harmony export */   getCommon: function() { return /* binding */ getCommon; },\n/* harmony export */   getHardwareWalletProvider: function() { return /* binding */ getHardwareWalletProvider; }\n/* harmony export */ });\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/Subject.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/take.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/firstValueFrom.js\");\n/* harmony import */ var _web3_onboard_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-onboard/common */ \"(app-pages-browser)/./node_modules/@web3-onboard/common/dist/index.js\");\n/* harmony import */ var joi__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! joi */ \"(app-pages-browser)/./node_modules/joi/dist/joi-browser.min.js\");\n\n\n\n\nfunction noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\n\nconst dirty_components = [];\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction fade(node, { delay = 0, duration = 400, easing = identity } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\n\nvar closeIcon = `\n  <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M11.6569 1.75736L7.41429 6L11.6569 10.2426L10.2427 11.6569L6.00008 7.41421L1.75744 11.6569L0.343227 10.2426L4.58587 6L0.343227 1.75736L1.75744 0.343146L6.00008 4.58579L10.2427 0.343146L11.6569 1.75736Z\" fill=\"currentColor\"/>\n  </svg>\n`;\n\n/* src/elements/CloseButton.svelte generated by Svelte v3.59.1 */\n\nfunction add_css$6(target) {\n\tappend_styles(target, \"svelte-1jp3yas\", \".close-button.svelte-1jp3yas.svelte-1jp3yas{position:relative;overflow:hidden;display:flex;align-items:center;justify-content:center;height:2rem;width:2rem;border-radius:2rem;cursor:pointer;color:var(--onboard-close-button-color, inherit)}.close-button.svelte-1jp3yas.svelte-1jp3yas:hover::before{opacity:0.2}.close-button.svelte-1jp3yas:hover .svg-box.svelte-1jp3yas{opacity:1}.close-button.svelte-1jp3yas.svelte-1jp3yas::before{content:'';position:absolute;height:inherit;width:inherit;opacity:0.1;background:currentColor;transition:300ms ease-in-out opacity}.svg-box.svelte-1jp3yas.svelte-1jp3yas{display:flex;position:absolute;height:14px;width:14px;opacity:0.6;transition:300ms ease-in-out opacity}\");\n}\n\nfunction create_fragment$6(ctx) {\n\tlet div2;\n\tlet div1;\n\tlet div0;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv2 = element(\"div\");\n\t\t\tdiv1 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tattr(div0, \"class\", \"svg-box svelte-1jp3yas\");\n\t\t\tattr(div1, \"class\", \"close-button svelte-1jp3yas\");\n\t\t\tattr(div2, \"class\", \"close-button-container\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div2, anchor);\n\t\t\tappend(div2, div1);\n\t\t\tappend(div1, div0);\n\t\t\tdiv0.innerHTML = closeIcon;\n\t\t},\n\t\tp: noop,\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div2);\n\t\t}\n\t};\n}\n\nclass CloseButton extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, null, create_fragment$6, safe_not_equal, {}, add_css$6);\n\t}\n}\n\n/* src/elements/AddressTable.svelte generated by Svelte v3.59.1 */\n\nfunction add_css$5(target) {\n\tappend_styles(target, \"svelte-1u0a3bu\", \"table.svelte-1u0a3bu.svelte-1u0a3bu{border-spacing:0px}table.svelte-1u0a3bu thead.svelte-1u0a3bu{box-shadow:0px 1px 0px rgba(0, 0, 0, 0.1);background:var(--account-select-background-color, var(--foreground-color))}th.svelte-1u0a3bu.svelte-1u0a3bu,td.svelte-1u0a3bu.svelte-1u0a3bu{text-align:left;padding:0.4rem 0.5rem}td.svelte-1u0a3bu.svelte-1u0a3bu{font-size:var(\\n      --account-select-font-size-6,\\n      var(--onboard-font-size-6, var(--font-size-6))\\n    );line-height:var(\\n      --account-select-font-line-height-1,\\n      var(--onboard-font-line-height-1, var(--font-line-height-1))\\n    )}tbody.svelte-1u0a3bu tr.svelte-1u0a3bu{box-shadow:0px 1px 0px rgba(0, 0, 0, 0.1)}tbody.svelte-1u0a3bu tr.svelte-1u0a3bu:hover{background:var(\\n      --account-select-primary-100,\\n      var(--onboard-primary-100, var(--primary-100))\\n    );color:var(--account-select-text-color, var(--onboard-black, var(--black)))}.address-table.svelte-1u0a3bu.svelte-1u0a3bu{min-height:4.5rem;max-height:14rem;overflow:auto}.selected-row.svelte-1u0a3bu.svelte-1u0a3bu,.selected-row.svelte-1u0a3bu.svelte-1u0a3bu:hover{background:var(\\n      --account-select-primary-500,\\n      var(--onboard-primary-500, var(--primary-500))\\n    );color:var(\\n      --account-select-primary-100,\\n      var(--onboard-primary-100, var(--primary-100))\\n    )}.asset-td.svelte-1u0a3bu.svelte-1u0a3bu{font-weight:bold}.w-100.svelte-1u0a3bu.svelte-1u0a3bu{width:100%}.pointer.svelte-1u0a3bu.svelte-1u0a3bu{cursor:pointer}@media all and (min-width: 768px){.address-table.svelte-1u0a3bu.svelte-1u0a3bu{max-height:27rem}td.svelte-1u0a3bu.svelte-1u0a3bu{font-size:var(\\n        --account-select-font-size-5,\\n        var(--onboard-font-size-5, var(--font-size-5))\\n      )}th.svelte-1u0a3bu.svelte-1u0a3bu,td.svelte-1u0a3bu.svelte-1u0a3bu{padding:0.5rem 0.5rem}}\");\n}\n\nfunction get_each_context$1(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[6] = list[i];\n\treturn child_ctx;\n}\n\n// (115:6) {#if accounts && accounts.length}\nfunction create_if_block$4(ctx) {\n\tlet each_1_anchor;\n\tlet each_value = /*accounts*/ ctx[1];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\teach_1_anchor = empty();\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\teach_blocks[i].m(target, anchor);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinsert(target, each_1_anchor, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*accountSelected, accounts, handleSelectedRow, weiToEth*/ 7) {\n\t\t\t\teach_value = /*accounts*/ ctx[1];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context$1(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block$1(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\teach_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (; i < each_blocks.length; i += 1) {\n\t\t\t\t\teach_blocks[i].d(1);\n\t\t\t\t}\n\n\t\t\t\teach_blocks.length = each_value.length;\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t\tif (detaching) detach(each_1_anchor);\n\t\t}\n\t};\n}\n\n// (116:8) {#each accounts as account}\nfunction create_each_block$1(ctx) {\n\tlet tr;\n\tlet td0;\n\tlet t0_value = /*account*/ ctx[6].address + \"\";\n\tlet t0;\n\tlet t1;\n\tlet td1;\n\tlet t2_value = /*account*/ ctx[6].derivationPath + \"\";\n\tlet t2;\n\tlet t3;\n\tlet td2;\n\tlet t4_value = (0,_web3_onboard_common__WEBPACK_IMPORTED_MODULE_0__.weiToEth)(/*account*/ ctx[6].balance.value.toString()) + \"\";\n\tlet t4;\n\tlet t5;\n\tlet t6_value = /*account*/ ctx[6].balance.asset + \"\";\n\tlet t6;\n\tlet t7;\n\tlet mounted;\n\tlet dispose;\n\n\tfunction click_handler() {\n\t\treturn /*click_handler*/ ctx[5](/*account*/ ctx[6]);\n\t}\n\n\treturn {\n\t\tc() {\n\t\t\ttr = element(\"tr\");\n\t\t\ttd0 = element(\"td\");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = space();\n\t\t\ttd1 = element(\"td\");\n\t\t\tt2 = text(t2_value);\n\t\t\tt3 = space();\n\t\t\ttd2 = element(\"td\");\n\t\t\tt4 = text(t4_value);\n\t\t\tt5 = space();\n\t\t\tt6 = text(t6_value);\n\t\t\tt7 = space();\n\t\t\tset_style(td0, \"font-family\", \"'Courier New', Courier, monospace\");\n\t\t\tattr(td0, \"class\", \"svelte-1u0a3bu\");\n\t\t\tattr(td1, \"class\", \"svelte-1u0a3bu\");\n\t\t\tattr(td2, \"class\", \"asset-td svelte-1u0a3bu\");\n\t\t\tattr(tr, \"class\", \"pointer svelte-1u0a3bu\");\n\t\t\ttoggle_class(tr, \"selected-row\", /*accountSelected*/ ctx[0] && /*accountSelected*/ ctx[0].address === /*account*/ ctx[6].address);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, tr, anchor);\n\t\t\tappend(tr, td0);\n\t\t\tappend(td0, t0);\n\t\t\tappend(tr, t1);\n\t\t\tappend(tr, td1);\n\t\t\tappend(td1, t2);\n\t\t\tappend(tr, t3);\n\t\t\tappend(tr, td2);\n\t\t\tappend(td2, t4);\n\t\t\tappend(td2, t5);\n\t\t\tappend(td2, t6);\n\t\t\tappend(tr, t7);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(tr, \"click\", click_handler);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\t\t\tif (dirty & /*accounts*/ 2 && t0_value !== (t0_value = /*account*/ ctx[6].address + \"\")) set_data(t0, t0_value);\n\t\t\tif (dirty & /*accounts*/ 2 && t2_value !== (t2_value = /*account*/ ctx[6].derivationPath + \"\")) set_data(t2, t2_value);\n\t\t\tif (dirty & /*accounts*/ 2 && t4_value !== (t4_value = (0,_web3_onboard_common__WEBPACK_IMPORTED_MODULE_0__.weiToEth)(/*account*/ ctx[6].balance.value.toString()) + \"\")) set_data(t4, t4_value);\n\t\t\tif (dirty & /*accounts*/ 2 && t6_value !== (t6_value = /*account*/ ctx[6].balance.asset + \"\")) set_data(t6, t6_value);\n\n\t\t\tif (dirty & /*accountSelected, accounts*/ 3) {\n\t\t\t\ttoggle_class(tr, \"selected-row\", /*accountSelected*/ ctx[0] && /*accountSelected*/ ctx[0].address === /*account*/ ctx[6].address);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(tr);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction create_fragment$5(ctx) {\n\tlet div;\n\tlet table;\n\tlet colgroup;\n\tlet t2;\n\tlet thead;\n\tlet t8;\n\tlet tbody;\n\tlet if_block = /*accounts*/ ctx[1] && /*accounts*/ ctx[1].length && create_if_block$4(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\ttable = element(\"table\");\n\t\t\tcolgroup = element(\"colgroup\");\n\n\t\t\tcolgroup.innerHTML = `<col style=\"width: 50%;\"/> \n      <col style=\"width: 28%;\"/> \n      <col style=\"width: 22%;\"/>`;\n\n\t\t\tt2 = space();\n\t\t\tthead = element(\"thead\");\n\n\t\t\tthead.innerHTML = `<tr><th class=\"svelte-1u0a3bu\">Address</th> \n        <th class=\"svelte-1u0a3bu\">DPATH</th> \n        <th class=\"svelte-1u0a3bu\">Asset</th></tr>`;\n\n\t\t\tt8 = space();\n\t\t\ttbody = element(\"tbody\");\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(thead, \"class\", \" svelte-1u0a3bu\");\n\t\t\tattr(tbody, \"class\", \"svelte-1u0a3bu\");\n\t\t\tattr(table, \"class\", \"w-100 svelte-1u0a3bu\");\n\t\t\tattr(div, \"class\", \"address-table svelte-1u0a3bu\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, table);\n\t\t\tappend(table, colgroup);\n\t\t\tappend(table, t2);\n\t\t\tappend(table, thead);\n\t\t\tappend(table, t8);\n\t\t\tappend(table, tbody);\n\t\t\tif (if_block) if_block.m(tbody, null);\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (/*accounts*/ ctx[1] && /*accounts*/ ctx[1].length) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$4(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(tbody, null);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tif (if_block) if_block.d();\n\t\t}\n\t};\n}\n\nfunction instance$5($$self, $$props, $$invalidate) {\n\tlet accounts;\n\tlet { accountsListObject } = $$props;\n\tlet { accountSelected = undefined } = $$props;\n\tlet { showEmptyAddresses } = $$props;\n\n\tconst handleSelectedRow = accountClicked => {\n\t\t$$invalidate(0, accountSelected = accountClicked);\n\t};\n\n\tconst click_handler = account => handleSelectedRow(account);\n\n\t$$self.$$set = $$props => {\n\t\tif ('accountsListObject' in $$props) $$invalidate(3, accountsListObject = $$props.accountsListObject);\n\t\tif ('accountSelected' in $$props) $$invalidate(0, accountSelected = $$props.accountSelected);\n\t\tif ('showEmptyAddresses' in $$props) $$invalidate(4, showEmptyAddresses = $$props.showEmptyAddresses);\n\t};\n\n\t$$self.$$.update = () => {\n\t\tif ($$self.$$.dirty & /*showEmptyAddresses, accountsListObject*/ 24) {\n\t\t\t$$invalidate(1, accounts = showEmptyAddresses\n\t\t\t? accountsListObject && accountsListObject.all\n\t\t\t: accountsListObject && accountsListObject.filtered);\n\t\t}\n\t};\n\n\treturn [\n\t\taccountSelected,\n\t\taccounts,\n\t\thandleSelectedRow,\n\t\taccountsListObject,\n\t\tshowEmptyAddresses,\n\t\tclick_handler\n\t];\n}\n\nclass AddressTable extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$5,\n\t\t\tcreate_fragment$5,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\taccountsListObject: 3,\n\t\t\t\taccountSelected: 0,\n\t\t\t\tshowEmptyAddresses: 4\n\t\t\t},\n\t\t\tadd_css$5\n\t\t);\n\t}\n}\n\n/* src/elements/Spinner.svelte generated by Svelte v3.59.1 */\n\nfunction add_css$4(target) {\n\tappend_styles(target, \"svelte-14p0oc3\", \".loading-container.svelte-14p0oc3.svelte-14p0oc3{display:flex;flex-direction:column;align-items:center;justify-content:center;font-family:inherit;font-size:inherit;color:inherit;margin-left:auto}span.svelte-14p0oc3.svelte-14p0oc3{font-family:inherit;font-size:0.889em;margin-top:1rem}.loading.svelte-14p0oc3.svelte-14p0oc3{display:inline-block;position:relative}.loading.svelte-14p0oc3 div.svelte-14p0oc3{box-sizing:border-box;font-size:inherit;display:block;position:absolute;border:3px solid;border-radius:50%;animation:svelte-14p0oc3-bn-loading 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;border-color:currentColor transparent transparent transparent}.loading.svelte-14p0oc3 .loading-first.svelte-14p0oc3{animation-delay:-0.45s}.loading.svelte-14p0oc3 .loading-second.svelte-14p0oc3{animation-delay:-0.3s}.loading.svelte-14p0oc3 .loading-third.svelte-14p0oc3{animation-delay:-0.15s}@keyframes svelte-14p0oc3-bn-loading{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}\");\n}\n\n// (68:2) {#if description}\nfunction create_if_block$3(ctx) {\n\tlet span;\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tspan = element(\"span\");\n\t\t\tt = text(/*description*/ ctx[0]);\n\t\t\tattr(span, \"class\", \"svelte-14p0oc3\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, span, anchor);\n\t\t\tappend(span, t);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*description*/ 1) set_data(t, /*description*/ ctx[0]);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(span);\n\t\t}\n\t};\n}\n\nfunction create_fragment$4(ctx) {\n\tlet div4;\n\tlet div3;\n\tlet div0;\n\tlet div0_style_value;\n\tlet t0;\n\tlet div1;\n\tlet div1_style_value;\n\tlet t1;\n\tlet div2;\n\tlet div2_style_value;\n\tlet div3_style_value;\n\tlet t2;\n\tlet if_block = /*description*/ ctx[0] && create_if_block$3(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv4 = element(\"div\");\n\t\t\tdiv3 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tt0 = space();\n\t\t\tdiv1 = element(\"div\");\n\t\t\tt1 = space();\n\t\t\tdiv2 = element(\"div\");\n\t\t\tt2 = space();\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(div0, \"class\", \"loading-first svelte-14p0oc3\");\n\t\t\tattr(div0, \"style\", div0_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`);\n\t\t\tattr(div1, \"class\", \"loading-second svelte-14p0oc3\");\n\t\t\tattr(div1, \"style\", div1_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`);\n\t\t\tattr(div2, \"class\", \"loading-third svelte-14p0oc3\");\n\t\t\tattr(div2, \"style\", div2_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`);\n\t\t\tattr(div3, \"class\", \"loading svelte-14p0oc3\");\n\t\t\tattr(div3, \"style\", div3_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`);\n\t\t\tattr(div4, \"class\", \"loading-container svelte-14p0oc3\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div4, anchor);\n\t\t\tappend(div4, div3);\n\t\t\tappend(div3, div0);\n\t\t\tappend(div3, t0);\n\t\t\tappend(div3, div1);\n\t\t\tappend(div3, t1);\n\t\t\tappend(div3, div2);\n\t\t\tappend(div4, t2);\n\t\t\tif (if_block) if_block.m(div4, null);\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*size*/ 2 && div0_style_value !== (div0_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`)) {\n\t\t\t\tattr(div0, \"style\", div0_style_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*size*/ 2 && div1_style_value !== (div1_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`)) {\n\t\t\t\tattr(div1, \"style\", div1_style_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*size*/ 2 && div2_style_value !== (div2_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`)) {\n\t\t\t\tattr(div2, \"style\", div2_style_value);\n\t\t\t}\n\n\t\t\tif (dirty & /*size*/ 2 && div3_style_value !== (div3_style_value = `height: ${/*size*/ ctx[1]}; width: ${/*size*/ ctx[1]};`)) {\n\t\t\t\tattr(div3, \"style\", div3_style_value);\n\t\t\t}\n\n\t\t\tif (/*description*/ ctx[0]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block$3(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(div4, null);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\t\t},\n\t\ti: noop,\n\t\to: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div4);\n\t\t\tif (if_block) if_block.d();\n\t\t}\n\t};\n}\n\nfunction instance$4($$self, $$props, $$invalidate) {\n\tlet { description = '' } = $$props;\n\tlet { size = '2rem' } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('description' in $$props) $$invalidate(0, description = $$props.description);\n\t\tif ('size' in $$props) $$invalidate(1, size = $$props.size);\n\t};\n\n\treturn [description, size];\n}\n\nclass Spinner extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$4, create_fragment$4, safe_not_equal, { description: 0, size: 1 }, add_css$4);\n\t}\n}\n\n/* src/elements/TableHeader.svelte generated by Svelte v3.59.1 */\n\nfunction add_css$3(target) {\n\tappend_styles(target, \"svelte-1t799sf\", \"button.svelte-1t799sf{align-items:center;padding:0.5rem 0.5rem;color:var(--account-select-white, var(--onboard-white, var(--white)));border-radius:1.5rem;font-family:var(\\n      --account-select-font-family-normal,\\n      var(--font-family-normal, var(--font-family-normal))\\n    );font-style:normal;font-weight:bold;font-size:var(\\n      --account-select-font-size-6,\\n      var(--onboard-font-size-6, var(--font-size-6))\\n    );line-height:var(\\n      --account-select-font-line-height-1,\\n      var(--onboard-line-height-1, var(--line-height-1))\\n    );border:none;width:8rem}.scan-accounts-btn.svelte-1t799sf{background:var(--account-select-gray-500, var(--action-color));color:var(--account-select-primary-100, inherit);display:flex;justify-content:center;align-items:center;cursor:pointer}input.svelte-1t799sf:hover{border-color:var(\\n      --account-select-primary-500,\\n      var(--onboard-primary-300, var(--primary-300))\\n    )}input.svelte-1t799sf:focus{border-color:var(\\n      --account-select-primary-500,\\n      var(--onboard-primary-500, var(--primary-500))\\n    );box-shadow:0 0 1px 1px\\n      var(\\n        --account-select-primary-500,\\n        var(--onboard-primary-500, var(--primary-500))\\n      );box-shadow:0 0 0 1px -moz-mac-focusring;outline:none}input.svelte-1t799sf:disabled{background:var(\\n      --account-select-accent-background-color,\\n      var(--onboard-gray-100, var(--gray-100))\\n    )}input[type='checkbox'].svelte-1t799sf{-webkit-appearance:none;width:auto;background:var(--account-select-background-color, var(--onboard-white, var(--white)));border:1px solid\\n      var(--account-select-gray-300, var(--onboard-gray-300, var(--gray-300)));padding:0.5em;border-radius:3px;display:flex;justify-content:center;align-items:center;position:relative;cursor:pointer;height:0.5rem;width:0.5rem}input[type='checkbox'].svelte-1t799sf:hover{border-color:var(\\n      --account-select-primary-500,\\n      var(--onboard-primary-500, var(--primary-500))\\n    )}input[type='checkbox'].svelte-1t799sf:checked{background:var(\\n      --account-select-primary-500,\\n      var(--onboard-primary-500, var(--primary-500))\\n    );border-color:var(\\n      --account-select-primary-500,\\n      var(--onboard-primary-500, var(--primary-500))\\n    );color:var(--account-select-white, var(--onboard-white, var(--white)))}input[type='checkbox'].svelte-1t799sf:checked:after{content:url(\\\"data:image/svg+xml,%3Csvg width='0.885em' height='0.6em' viewBox='0 0 14 11' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M0 6L5 11L14 2L12.59 0.58L5 8.17L1.41 4.59L0 6Z' fill='white'/%3E%3C/svg%3E\\\");font-size:var(\\n      --account-select-font-size-7,\\n      var(--onboard-font-size-7, var(--font-size-7))\\n    );position:absolute;color:var(--account-select-white, var(--onboard-white, var(--white)))}.checkbox-container.svelte-1t799sf{display:flex;align-items:center;position:absolute;top:238px;left:14px;font-size:14px}.checkbox-input.svelte-1t799sf{margin-right:0.5rem}.error-msg.svelte-1t799sf{color:var(\\n      --account-select-danger-500,\\n      var(--onboard-danger-500, var(--danger-500))\\n    );font-size:var(--account-select-font-size-7, var(--font-size-7));max-width:15rem;line-height:1;position:absolute;top:260px;left:18px}.table-controls.svelte-1t799sf{display:flex;flex-direction:row;justify-content:center;align-items:center;padding:0.5rem;border-radius:0.4rem 0.4rem 0 0;background:var(--account-select-accent-background-color, var(--border-color))}.cursor-pointer.svelte-1t799sf{cursor:pointer}@media all and (min-width: 768px){.checkbox-container.svelte-1t799sf{display:flex;align-items:center;position:unset;top:unset;left:unset;font-size:unset}.checkbox-input.svelte-1t799sf{margin-right:0.75rem}.error-msg.svelte-1t799sf{position:unset;top:unset;left:unset}.table-controls.svelte-1t799sf{height:3.5rem;justify-content:space-between}input[type='checkbox'].svelte-1t799sf{height:1.5rem;width:1.5rem}button.svelte-1t799sf{padding:0.75rem 1.5rem;font-size:var(\\n        --account-select-font-size-5,\\n        var(--onboard-font-size-5, var(--font-size-5))\\n      );width:unset}}@media all and (max-width: 326px){.checkbox-container.svelte-1t799sf{top:328px}.error-msg.svelte-1t799sf{top:350px}}\");\n}\n\n// (218:2) {#if errorFromScan}\nfunction create_if_block_2$1(ctx) {\n\tlet span;\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tspan = element(\"span\");\n\t\t\tt = text(/*errorFromScan*/ ctx[3]);\n\t\t\tattr(span, \"class\", \"error-msg svelte-1t799sf\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, span, anchor);\n\t\t\tappend(span, t);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty & /*errorFromScan*/ 8) set_data(t, /*errorFromScan*/ ctx[3]);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(span);\n\t\t}\n\t};\n}\n\n// (226:4) {#if loadingAccounts}\nfunction create_if_block_1$1(ctx) {\n\tlet t;\n\tlet spinner;\n\tlet current;\n\tspinner = new Spinner({ props: { size: \"1.5rem\" } });\n\n\treturn {\n\t\tc() {\n\t\t\tt = text(\"Scanning...\\n      \");\n\t\t\tcreate_component(spinner.$$.fragment);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t, anchor);\n\t\t\tmount_component(spinner, target, anchor);\n\t\t\tcurrent = true;\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(spinner.$$.fragment, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(spinner.$$.fragment, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(t);\n\t\t\tdestroy_component(spinner, detaching);\n\t\t}\n\t};\n}\n\n// (230:4) {#if !loadingAccounts}\nfunction create_if_block$2(ctx) {\n\tlet t;\n\n\treturn {\n\t\tc() {\n\t\t\tt = text(\"Scan Accounts\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t, anchor);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(t);\n\t\t}\n\t};\n}\n\nfunction create_fragment$3(ctx) {\n\tlet div1;\n\tlet div0;\n\tlet input;\n\tlet t0;\n\tlet label;\n\tlet t2;\n\tlet t3;\n\tlet button;\n\tlet t4;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tlet if_block0 = /*errorFromScan*/ ctx[3] && create_if_block_2$1(ctx);\n\tlet if_block1 = /*loadingAccounts*/ ctx[2] && create_if_block_1$1();\n\tlet if_block2 = !/*loadingAccounts*/ ctx[2] && create_if_block$2();\n\n\treturn {\n\t\tc() {\n\t\t\tdiv1 = element(\"div\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tinput = element(\"input\");\n\t\t\tt0 = space();\n\t\t\tlabel = element(\"label\");\n\t\t\tlabel.textContent = \"Show Empty Addresses\";\n\t\t\tt2 = space();\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt3 = space();\n\t\t\tbutton = element(\"button\");\n\t\t\tif (if_block1) if_block1.c();\n\t\t\tt4 = space();\n\t\t\tif (if_block2) if_block2.c();\n\t\t\tattr(input, \"id\", \"show-empty-addresses\");\n\t\t\tattr(input, \"type\", \"checkbox\");\n\t\t\tattr(input, \"class\", \"checkbox-input svelte-1t799sf\");\n\t\t\tattr(label, \"for\", \"show-empty-addresses\");\n\t\t\tattr(label, \"class\", \"ml2 cursor-pointer font-5 svelte-1t799sf\");\n\t\t\tattr(div0, \"class\", \"checkbox-container svelte-1t799sf\");\n\t\t\tattr(button, \"class\", \"scan-accounts-btn svelte-1t799sf\");\n\t\t\tattr(button, \"id\", \"scan-accounts\");\n\t\t\tattr(div1, \"class\", \"table-controls svelte-1t799sf\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div1, anchor);\n\t\t\tappend(div1, div0);\n\t\t\tappend(div0, input);\n\t\t\tinput.checked = /*showEmptyAddresses*/ ctx[0];\n\t\t\tappend(div0, t0);\n\t\t\tappend(div0, label);\n\t\t\tappend(div1, t2);\n\t\t\tif (if_block0) if_block0.m(div1, null);\n\t\t\tappend(div1, t3);\n\t\t\tappend(div1, button);\n\t\t\tif (if_block1) if_block1.m(button, null);\n\t\t\tappend(button, t4);\n\t\t\tif (if_block2) if_block2.m(button, null);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(input, \"change\", /*input_change_handler*/ ctx[4]),\n\t\t\t\t\tlisten(button, \"click\", /*click_handler*/ ctx[5])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, [dirty]) {\n\t\t\tif (dirty & /*showEmptyAddresses*/ 1) {\n\t\t\t\tinput.checked = /*showEmptyAddresses*/ ctx[0];\n\t\t\t}\n\n\t\t\tif (/*errorFromScan*/ ctx[3]) {\n\t\t\t\tif (if_block0) {\n\t\t\t\t\tif_block0.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block0 = create_if_block_2$1(ctx);\n\t\t\t\t\tif_block0.c();\n\t\t\t\t\tif_block0.m(div1, t3);\n\t\t\t\t}\n\t\t\t} else if (if_block0) {\n\t\t\t\tif_block0.d(1);\n\t\t\t\tif_block0 = null;\n\t\t\t}\n\n\t\t\tif (/*loadingAccounts*/ ctx[2]) {\n\t\t\t\tif (if_block1) {\n\t\t\t\t\tif (dirty & /*loadingAccounts*/ 4) {\n\t\t\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif_block1 = create_if_block_1$1();\n\t\t\t\t\tif_block1.c();\n\t\t\t\t\ttransition_in(if_block1, 1);\n\t\t\t\t\tif_block1.m(button, t4);\n\t\t\t\t}\n\t\t\t} else if (if_block1) {\n\t\t\t\tgroup_outros();\n\n\t\t\t\ttransition_out(if_block1, 1, 1, () => {\n\t\t\t\t\tif_block1 = null;\n\t\t\t\t});\n\n\t\t\t\tcheck_outros();\n\t\t\t}\n\n\t\t\tif (!/*loadingAccounts*/ ctx[2]) {\n\t\t\t\tif (if_block2) ; else {\n\t\t\t\t\tif_block2 = create_if_block$2();\n\t\t\t\t\tif_block2.c();\n\t\t\t\t\tif_block2.m(button, null);\n\t\t\t\t}\n\t\t\t} else if (if_block2) {\n\t\t\t\tif_block2.d(1);\n\t\t\t\tif_block2 = null;\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(if_block1);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(if_block1);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div1);\n\t\t\tif (if_block0) if_block0.d();\n\t\t\tif (if_block1) if_block1.d();\n\t\t\tif (if_block2) if_block2.d();\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction instance$3($$self, $$props, $$invalidate) {\n\tlet { scanAccounts } = $$props;\n\tlet { loadingAccounts } = $$props;\n\tlet { showEmptyAddresses } = $$props;\n\tlet { errorFromScan } = $$props;\n\n\tfunction input_change_handler() {\n\t\tshowEmptyAddresses = this.checked;\n\t\t$$invalidate(0, showEmptyAddresses);\n\t}\n\n\tconst click_handler = async () => await scanAccounts();\n\n\t$$self.$$set = $$props => {\n\t\tif ('scanAccounts' in $$props) $$invalidate(1, scanAccounts = $$props.scanAccounts);\n\t\tif ('loadingAccounts' in $$props) $$invalidate(2, loadingAccounts = $$props.loadingAccounts);\n\t\tif ('showEmptyAddresses' in $$props) $$invalidate(0, showEmptyAddresses = $$props.showEmptyAddresses);\n\t\tif ('errorFromScan' in $$props) $$invalidate(3, errorFromScan = $$props.errorFromScan);\n\t};\n\n\treturn [\n\t\tshowEmptyAddresses,\n\t\tscanAccounts,\n\t\tloadingAccounts,\n\t\terrorFromScan,\n\t\tinput_change_handler,\n\t\tclick_handler\n\t];\n}\n\nclass TableHeader extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance$3,\n\t\t\tcreate_fragment$3,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tscanAccounts: 1,\n\t\t\t\tloadingAccounts: 2,\n\t\t\t\tshowEmptyAddresses: 0,\n\t\t\t\terrorFromScan: 3\n\t\t\t},\n\t\t\tadd_css$3\n\t\t);\n\t}\n}\n\n/* src/views/AccountSelect.svelte generated by Svelte v3.59.1 */\n\nfunction add_css$2(target) {\n\tappend_styles(target, \"svelte-1vabcrr\", \"select.svelte-1vabcrr{display:block;margin:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;font-family:inherit;background-image:url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23242835%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E'),\\n      linear-gradient(to bottom, transparent 0%, transparent 100%);background-repeat:no-repeat, repeat;background-position:right 1rem top 1rem, 0 0;background-size:0.65em auto, 100%;scrollbar-width:none;width:100%;padding:0.5rem 1.8rem 0.5rem 1rem;border-radius:8px;font-size:var(\\n      --account-select-font-size-5,\\n      var(--onboard-font-size-5, var(--font-size-5))\\n    );transition:all 200ms ease-in-out;border:2px solid var(--account-select-gray-200, var(--border-color));box-sizing:border-box;height:3rem;-ms-overflow-style:none}select.svelte-1vabcrr::-webkit-scrollbar,input.svelte-1vabcrr::-webkit-scrollbar{display:none}select.svelte-1vabcrr::-ms-expand,input.svelte-1vabcrr::-ms-expand{display:none}input[type='text'].svelte-1vabcrr{display:block;margin:0;-moz-appearance:none;-webkit-appearance:none;appearance:none;scrollbar-width:none;width:100%;padding:0.5rem 2.6rem 0.5rem 1rem;border-radius:8px;font-size:var(\\n      --account-select-font-size-5,\\n      var(--onboard-font-size-5, var(--font-size-5))\\n    );line-height:var(\\n      --account-select-font-line-height-1,\\n      var(--onboard-font-line-height-1, var(--font-line-height-1))\\n    );color:var(\\n      --account-select-gray-600,\\n      var(--onboard-gray-600, var(--gray-600))\\n    );transition:all 200ms ease-in-out;border:2px solid\\n      var(--account-select-gray-200, var(--onboard-gray-200, var(--gray-200)));box-sizing:border-box;height:3rem;-ms-overflow-style:none}button.svelte-1vabcrr{align-items:center;padding:0.75rem 1.5rem;color:var(--account-select-white, var(--onboard-white, var(--white)));border-radius:1.5rem;font-family:var(\\n      --account-select-font-family-normal,\\n      var(--onboard-font-family-normal, var(--font-family-normal))\\n    );font-style:normal;font-weight:bold;font-size:var(\\n      --account-select-font-size-5,\\n      var(--onboard-font-size-5, var(--font-size-5))\\n    );line-height:var(\\n      --account-select-font-line-height-1,\\n      var(--onboard-line-height-1, var(--line-height-1))\\n    );border:none}.connect-btn.svelte-1vabcrr:disabled{background:var(\\n      --account-select-primary-300,\\n      var(--onboard-primary-300, var(--primary-300))\\n    );cursor:default}.connect-btn.svelte-1vabcrr{background:var(\\n      --account-select-primary-500,\\n      var(--onboard-primary-500, var(--primary-500))\\n    );cursor:pointer}.dismiss-action.svelte-1vabcrr{color:var(\\n      --account-select-primary-500,\\n      var(--onboard-primary-500, var(--primary-500))\\n    );cursor:pointer;margin-left:var(\\n      --account-select-margin-4,\\n      var(--onboard-margin-4, var(--margin-4))\\n    )}select.svelte-1vabcrr:hover,input.svelte-1vabcrr:hover{border-color:var(\\n      --account-select-primary-300,\\n      var(--onboard-primary-300, var(--primary-300))\\n    )}select.svelte-1vabcrr:focus,input.svelte-1vabcrr:focus{border-color:var(\\n      --account-select-primary-500,\\n      var(--onboard-primary-500, var(--primary-500))\\n    );box-shadow:0 0 1px 1px\\n      var(\\n        --account-select-primary-500,\\n        var(--onboard-primary-500, var(--primary-500))\\n      );box-shadow:0 0 0 1px -moz-mac-focusring;outline:none}select.svelte-1vabcrr:disabled{background:var(\\n      --account-select-accent-background-color,\\n      var(--onboard-gray-100, var(--gray-100))\\n    )}option.svelte-1vabcrr{font-weight:300}.close.svelte-1vabcrr{cursor:pointer;padding:0.5rem}.container.svelte-1vabcrr{font-family:var(--onboard-font-family-normal, var(--font-family-normal));color:var(--account-select-text-color, var(--text-color));position:fixed;top:0;right:0;z-index:var(\\n      --onboard-account-select-modal-z-index,\\n      var(--account-select-modal-z-index)\\n    );display:flex;align-items:center;justify-content:center;backdrop-filter:blur(4px);background:var(--account-select-background-color, rgba(0, 0, 0, 0.2))}.fixed.svelte-1vabcrr{position:fixed}.h-w-100.svelte-1vabcrr{width:100vw;height:100vh}.hardware-connect-modal.svelte-1vabcrr{width:100%;flex-flow:column;display:flex;max-height:51.75rem;background:var(--account-select-background-color, var(--background-color));box-shadow:var(\\n      --account-select-shadow,\\n      var(--onboard-shadow-1, var(--shadow-1))\\n    );border-radius:1.5rem}.account-select-modal-position.svelte-1vabcrr{position:absolute;top:var(\\n      --onboard-account-select-modal-top,\\n      var(--account-select-modal-top)\\n    );bottom:var(\\n      --onboard-account-select-modal-bottom,\\n      var(--account-select-modal-bottom)\\n    );left:var(\\n      --onboard-account-select-modal-left,\\n      var(--account-select-modal-left)\\n    );right:var(\\n      --onboard-account-select-modal-right,\\n      var(--account-select-modal-right)\\n    );max-height:100vh;overflow:scroll;scrollbar-width:none;-ms-overflow-style:none}.account-select-modal-position.svelte-1vabcrr::-webkit-scrollbar{display:none}.connect-wallet-header.svelte-1vabcrr{position:relative;border-bottom:1px solid var(--border-color, transparent);border-radius:1.5rem 1.5rem 0 0;display:flex;justify-content:space-between;align-items:center;width:100%}.modal-controls.svelte-1vabcrr{display:flex;flex-wrap:wrap;justify-content:space-between;align-items:center;padding:1rem;padding-top:0}.control-label.svelte-1vabcrr{font-style:normal;font-weight:bold;font-size:var(\\n      --account-select-font-size-5,\\n      var(--onboard-font-size-5, var(--font-size-5))\\n    );line-height:var(\\n      --account-select-font-line-height-1,\\n      var(--onboard-font-line-height-1, var(--font-line-height-1))\\n    );margin-top:var(\\n      --account-select-margin-5,\\n      var(--onboard-margin-5, var(--margin-5))\\n    );margin-bottom:var(\\n      --account-select-margin-5,\\n      var(--onboard-margin-5, var(--margin-5))\\n    );color:var(--account-select-gray-700, inherit)}.asset-select.svelte-1vabcrr{width:6rem}.network-select.svelte-1vabcrr{min-width:12rem}.w-100.svelte-1vabcrr{width:100%}.base-path-container.svelte-1vabcrr{position:relative;margin-right:var(\\n      --account-select-margin-5,\\n      var(--onboard-margin-5, var(--margin-5))\\n    )}.hidden-input-select.svelte-1vabcrr{position:absolute;top:2.7rem;right:0.2rem;width:2.5rem;height:2.5rem;background:transparent;cursor:pointer}.asset-container.svelte-1vabcrr{margin-right:var(\\n      --account-select-margin-5,\\n      var(--onboard-margin-5, var(--margin-5))\\n    )}.table-section.svelte-1vabcrr{max-height:31.8rem;padding:1rem;margin-top:2rem}.table-container.svelte-1vabcrr{border:2px solid var(--account-select-gray-200, var(--border-color));box-sizing:border-box;border-radius:0.5rem}.address-found-count.svelte-1vabcrr{padding:0 2rem}@media all and (min-width: 768px){.hardware-connect-modal.svelte-1vabcrr{width:50rem;display:table;flex-flow:unset}.modal-controls.svelte-1vabcrr{flex-wrap:nowrap}.base-path-select.svelte-1vabcrr{min-width:20rem}.table-section.svelte-1vabcrr{margin-top:unset}.account-select-modal-position.svelte-1vabcrr{max-height:unset;overflow:unset}}\");\n}\n\nfunction get_each_context(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[26] = list[i];\n\treturn child_ctx;\n}\n\nfunction get_each_context_1(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[29] = list[i];\n\treturn child_ctx;\n}\n\nfunction get_each_context_2(ctx, list, i) {\n\tconst child_ctx = ctx.slice();\n\tchild_ctx[32] = list[i];\n\treturn child_ctx;\n}\n\n// (450:40) \nfunction create_if_block_3(ctx) {\n\tlet select;\n\tlet each_1_anchor;\n\tlet mounted;\n\tlet dispose;\n\tlet each_value_2 = /*basePaths*/ ctx[7];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value_2.length; i += 1) {\n\t\teach_blocks[i] = create_each_block_2(get_each_context_2(ctx, each_value_2, i));\n\t}\n\n\tlet if_block = /*supportsCustomPath*/ ctx[10] && create_if_block_4();\n\n\treturn {\n\t\tc() {\n\t\t\tselect = element(\"select\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\teach_1_anchor = empty();\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(select, \"class\", \"base-path-select svelte-1vabcrr\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, select, anchor);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\teach_blocks[i].m(select, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tappend(select, each_1_anchor);\n\t\t\tif (if_block) if_block.m(select, null);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(select, \"change\", /*handleDerivationPathSelect*/ ctx[12]);\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty[0] & /*basePaths*/ 128) {\n\t\t\t\teach_value_2 = /*basePaths*/ ctx[7];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value_2.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context_2(ctx, each_value_2, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block_2(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\teach_blocks[i].m(select, each_1_anchor);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (; i < each_blocks.length; i += 1) {\n\t\t\t\t\teach_blocks[i].d(1);\n\t\t\t\t}\n\n\t\t\t\teach_blocks.length = each_value_2.length;\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(select);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t\tif (if_block) if_block.d();\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\n// (439:8) {#if customDerivationPath}\nfunction create_if_block_2(ctx) {\n\tlet input;\n\tlet t;\n\tlet span;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tinput = element(\"input\");\n\t\t\tt = space();\n\t\t\tspan = element(\"span\");\n\t\t\tattr(input, \"type\", \"text\");\n\t\t\tattr(input, \"class\", \"base-path-select svelte-1vabcrr\");\n\t\t\tattr(input, \"placeholder\", \"type/your/custom/path...\");\n\t\t\tattr(span, \"class\", \"hidden-input-select svelte-1vabcrr\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, input, anchor);\n\t\t\tinsert(target, t, anchor);\n\t\t\tinsert(target, span, anchor);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(input, \"change\", /*handleCustomPath*/ ctx[14]),\n\t\t\t\t\tlisten(span, \"click\", /*toggleDerivationPathToDropdown*/ ctx[13])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(input);\n\t\t\tif (detaching) detach(t);\n\t\t\tif (detaching) detach(span);\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\n// (455:12) {#each basePaths as path}\nfunction create_each_block_2(ctx) {\n\tlet option;\n\tlet t0_value = /*path*/ ctx[32].label + \"\";\n\tlet t0;\n\tlet t1;\n\tlet t2_value = /*path*/ ctx[32].value + \"\";\n\tlet t2;\n\tlet t3;\n\n\treturn {\n\t\tc() {\n\t\t\toption = element(\"option\");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = text(\" - \");\n\t\t\tt2 = text(t2_value);\n\t\t\tt3 = space();\n\t\t\toption.__value = /*path*/ ctx[32].value;\n\t\t\toption.value = option.__value;\n\t\t\tattr(option, \"class\", \"svelte-1vabcrr\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, option, anchor);\n\t\t\tappend(option, t0);\n\t\t\tappend(option, t1);\n\t\t\tappend(option, t2);\n\t\t\tappend(option, t3);\n\t\t},\n\t\tp: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(option);\n\t\t}\n\t};\n}\n\n// (460:12) {#if supportsCustomPath}\nfunction create_if_block_4(ctx) {\n\tlet option;\n\n\treturn {\n\t\tc() {\n\t\t\toption = element(\"option\");\n\t\t\toption.textContent = \"Custom Derivation Path\";\n\t\t\toption.__value = \"customPath\";\n\t\t\toption.value = option.__value;\n\t\t\tattr(option, \"class\", \"svelte-1vabcrr\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, option, anchor);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(option);\n\t\t}\n\t};\n}\n\n// (470:10) {#each assets as asset}\nfunction create_each_block_1(ctx) {\n\tlet option;\n\tlet t0_value = /*asset*/ ctx[29].label + \"\";\n\tlet t0;\n\tlet t1;\n\n\treturn {\n\t\tc() {\n\t\t\toption = element(\"option\");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = space();\n\t\t\toption.__value = /*asset*/ ctx[29];\n\t\t\toption.value = option.__value;\n\t\t\tattr(option, \"class\", \"svelte-1vabcrr\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, option, anchor);\n\t\t\tappend(option, t0);\n\t\t\tappend(option, t1);\n\t\t},\n\t\tp: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(option);\n\t\t}\n\t};\n}\n\n// (484:10) {#each chains as chain}\nfunction create_each_block(ctx) {\n\tlet option;\n\tlet t0_value = /*chain*/ ctx[26].label + \"\";\n\tlet t0;\n\tlet t1;\n\n\treturn {\n\t\tc() {\n\t\t\toption = element(\"option\");\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = space();\n\t\t\toption.__value = /*chain*/ ctx[26].id;\n\t\t\toption.value = option.__value;\n\t\t\tattr(option, \"class\", \"svelte-1vabcrr\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, option, anchor);\n\t\t\tappend(option, t0);\n\t\t\tappend(option, t1);\n\t\t},\n\t\tp: noop,\n\t\td(detaching) {\n\t\t\tif (detaching) detach(option);\n\t\t}\n\t};\n}\n\n// (510:8) {#if showEmptyAddresses}\nfunction create_if_block_1(ctx) {\n\tlet t0_value = (/*accountsListObject*/ ctx[0] && /*accountsListObject*/ ctx[0].all.length || 0) + \"\";\n\tlet t0;\n\tlet t1;\n\n\tlet t2_value = (/*accountsListObject*/ ctx[0] && /*accountsListObject*/ ctx[0].all.length !== 1\n\t? 'es'\n\t: '') + \"\";\n\n\tlet t2;\n\tlet t3;\n\n\treturn {\n\t\tc() {\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = text(\" total address\");\n\t\t\tt2 = text(t2_value);\n\t\t\tt3 = text(\" found\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t0, anchor);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tinsert(target, t2, anchor);\n\t\t\tinsert(target, t3, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty[0] & /*accountsListObject*/ 1 && t0_value !== (t0_value = (/*accountsListObject*/ ctx[0] && /*accountsListObject*/ ctx[0].all.length || 0) + \"\")) set_data(t0, t0_value);\n\n\t\t\tif (dirty[0] & /*accountsListObject*/ 1 && t2_value !== (t2_value = (/*accountsListObject*/ ctx[0] && /*accountsListObject*/ ctx[0].all.length !== 1\n\t\t\t? 'es'\n\t\t\t: '') + \"\")) set_data(t2, t2_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(t0);\n\t\t\tif (detaching) detach(t1);\n\t\t\tif (detaching) detach(t2);\n\t\t\tif (detaching) detach(t3);\n\t\t}\n\t};\n}\n\n// (516:8) {#if !showEmptyAddresses}\nfunction create_if_block$1(ctx) {\n\tlet t0_value = (/*accountsListObject*/ ctx[0] && /*accountsListObject*/ ctx[0].filtered.length || 0) + \"\";\n\tlet t0;\n\tlet t1;\n\n\tlet t2_value = (/*accountsListObject*/ ctx[0] && /*accountsListObject*/ ctx[0].filtered.length !== 1\n\t? 'es'\n\t: '') + \"\";\n\n\tlet t2;\n\tlet t3;\n\n\treturn {\n\t\tc() {\n\t\t\tt0 = text(t0_value);\n\t\t\tt1 = text(\" total\\n          address\");\n\t\t\tt2 = text(t2_value);\n\t\t\tt3 = text(\" found\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, t0, anchor);\n\t\t\tinsert(target, t1, anchor);\n\t\t\tinsert(target, t2, anchor);\n\t\t\tinsert(target, t3, anchor);\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (dirty[0] & /*accountsListObject*/ 1 && t0_value !== (t0_value = (/*accountsListObject*/ ctx[0] && /*accountsListObject*/ ctx[0].filtered.length || 0) + \"\")) set_data(t0, t0_value);\n\n\t\t\tif (dirty[0] & /*accountsListObject*/ 1 && t2_value !== (t2_value = (/*accountsListObject*/ ctx[0] && /*accountsListObject*/ ctx[0].filtered.length !== 1\n\t\t\t? 'es'\n\t\t\t: '') + \"\")) set_data(t2, t2_value);\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(t0);\n\t\t\tif (detaching) detach(t1);\n\t\t\tif (detaching) detach(t2);\n\t\t\tif (detaching) detach(t3);\n\t\t}\n\t};\n}\n\nfunction create_fragment$2(ctx) {\n\tlet div10;\n\tlet div9;\n\tlet header;\n\tlet div0;\n\tlet t0;\n\tlet div1;\n\tlet closebutton;\n\tlet t1;\n\tlet section0;\n\tlet div2;\n\tlet h40;\n\tlet t3;\n\tlet t4;\n\tlet div3;\n\tlet h41;\n\tlet t6;\n\tlet select0;\n\tlet t7;\n\tlet div4;\n\tlet h42;\n\tlet t9;\n\tlet select1;\n\tlet t10;\n\tlet section1;\n\tlet div5;\n\tlet tableheader;\n\tlet updating_showEmptyAddresses;\n\tlet t11;\n\tlet addresstable;\n\tlet updating_accountSelected;\n\tlet t12;\n\tlet section2;\n\tlet div6;\n\tlet t13;\n\tlet t14;\n\tlet div8;\n\tlet div7;\n\tlet t16;\n\tlet button;\n\tlet t17;\n\tlet button_disabled_value;\n\tlet div9_transition;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tclosebutton = new CloseButton({});\n\n\tfunction select_block_type(ctx, dirty) {\n\t\tif (/*customDerivationPath*/ ctx[2]) return create_if_block_2;\n\t\tif (!/*customDerivationPath*/ ctx[2]) return create_if_block_3;\n\t}\n\n\tlet current_block_type = select_block_type(ctx);\n\tlet if_block0 = current_block_type && current_block_type(ctx);\n\tlet each_value_1 = /*assets*/ ctx[8];\n\tlet each_blocks_1 = [];\n\n\tfor (let i = 0; i < each_value_1.length; i += 1) {\n\t\teach_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));\n\t}\n\n\tlet each_value = /*chains*/ ctx[9];\n\tlet each_blocks = [];\n\n\tfor (let i = 0; i < each_value.length; i += 1) {\n\t\teach_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));\n\t}\n\n\tfunction tableheader_showEmptyAddresses_binding(value) {\n\t\t/*tableheader_showEmptyAddresses_binding*/ ctx[22](value);\n\t}\n\n\tlet tableheader_props = {\n\t\tscanAccounts: /*scanAccountsWrap*/ ctx[15],\n\t\tloadingAccounts: /*loadingAccounts*/ ctx[4],\n\t\terrorFromScan: /*errorFromScan*/ ctx[5]\n\t};\n\n\tif (/*showEmptyAddresses*/ ctx[3] !== void 0) {\n\t\ttableheader_props.showEmptyAddresses = /*showEmptyAddresses*/ ctx[3];\n\t}\n\n\ttableheader = new TableHeader({ props: tableheader_props });\n\tbinding_callbacks.push(() => bind(tableheader, 'showEmptyAddresses', tableheader_showEmptyAddresses_binding));\n\n\tfunction addresstable_accountSelected_binding(value) {\n\t\t/*addresstable_accountSelected_binding*/ ctx[23](value);\n\t}\n\n\tlet addresstable_props = {\n\t\taccountsListObject: /*accountsListObject*/ ctx[0],\n\t\tshowEmptyAddresses: /*showEmptyAddresses*/ ctx[3]\n\t};\n\n\tif (/*accountSelected*/ ctx[1] !== void 0) {\n\t\taddresstable_props.accountSelected = /*accountSelected*/ ctx[1];\n\t}\n\n\taddresstable = new AddressTable({ props: addresstable_props });\n\tbinding_callbacks.push(() => bind(addresstable, 'accountSelected', addresstable_accountSelected_binding));\n\tlet if_block1 = /*showEmptyAddresses*/ ctx[3] && create_if_block_1(ctx);\n\tlet if_block2 = !/*showEmptyAddresses*/ ctx[3] && create_if_block$1(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\tdiv10 = element(\"div\");\n\t\t\tdiv9 = element(\"div\");\n\t\t\theader = element(\"header\");\n\t\t\tdiv0 = element(\"div\");\n\t\t\tt0 = space();\n\t\t\tdiv1 = element(\"div\");\n\t\t\tcreate_component(closebutton.$$.fragment);\n\t\t\tt1 = space();\n\t\t\tsection0 = element(\"section\");\n\t\t\tdiv2 = element(\"div\");\n\t\t\th40 = element(\"h4\");\n\t\t\th40.textContent = \"Select Base Path\";\n\t\t\tt3 = space();\n\t\t\tif (if_block0) if_block0.c();\n\t\t\tt4 = space();\n\t\t\tdiv3 = element(\"div\");\n\t\t\th41 = element(\"h4\");\n\t\t\th41.textContent = \"Asset\";\n\t\t\tt6 = space();\n\t\t\tselect0 = element(\"select\");\n\n\t\t\tfor (let i = 0; i < each_blocks_1.length; i += 1) {\n\t\t\t\teach_blocks_1[i].c();\n\t\t\t}\n\n\t\t\tt7 = space();\n\t\t\tdiv4 = element(\"div\");\n\t\t\th42 = element(\"h4\");\n\t\t\th42.textContent = \"Network\";\n\t\t\tt9 = space();\n\t\t\tselect1 = element(\"select\");\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\teach_blocks[i].c();\n\t\t\t}\n\n\t\t\tt10 = space();\n\t\t\tsection1 = element(\"section\");\n\t\t\tdiv5 = element(\"div\");\n\t\t\tcreate_component(tableheader.$$.fragment);\n\t\t\tt11 = space();\n\t\t\tcreate_component(addresstable.$$.fragment);\n\t\t\tt12 = space();\n\t\t\tsection2 = element(\"section\");\n\t\t\tdiv6 = element(\"div\");\n\t\t\tif (if_block1) if_block1.c();\n\t\t\tt13 = space();\n\t\t\tif (if_block2) if_block2.c();\n\t\t\tt14 = space();\n\t\t\tdiv8 = element(\"div\");\n\t\t\tdiv7 = element(\"div\");\n\t\t\tdiv7.textContent = \"Dismiss\";\n\t\t\tt16 = space();\n\t\t\tbutton = element(\"button\");\n\t\t\tt17 = text(\"Connect\");\n\t\t\tattr(div1, \"class\", \"close svelte-1vabcrr\");\n\t\t\tattr(header, \"class\", \"connect-wallet-header svelte-1vabcrr\");\n\t\t\tattr(h40, \"class\", \"control-label svelte-1vabcrr\");\n\t\t\tattr(div2, \"class\", \"w-100 base-path-container svelte-1vabcrr\");\n\t\t\tattr(h41, \"class\", \"control-label svelte-1vabcrr\");\n\t\t\tattr(select0, \"class\", \"asset-select svelte-1vabcrr\");\n\t\t\tif (/*scanAccountOptions*/ ctx[6]['asset'] === void 0) add_render_callback(() => /*select0_change_handler*/ ctx[20].call(select0));\n\t\t\tattr(div3, \"class\", \"asset-container svelte-1vabcrr\");\n\t\t\tattr(h42, \"class\", \"control-label svelte-1vabcrr\");\n\t\t\tattr(select1, \"class\", \"network-select svelte-1vabcrr\");\n\t\t\tif (/*scanAccountOptions*/ ctx[6]['chainId'] === void 0) add_render_callback(() => /*select1_change_handler*/ ctx[21].call(select1));\n\t\t\tattr(div4, \"class\", \"network-container\");\n\t\t\tattr(section0, \"class\", \"modal-controls svelte-1vabcrr\");\n\t\t\tattr(div5, \"class\", \"w-100 table-container svelte-1vabcrr\");\n\t\t\tattr(section1, \"class\", \"table-section svelte-1vabcrr\");\n\t\t\tattr(div6, \"class\", \"address-found-count svelte-1vabcrr\");\n\t\t\tattr(div7, \"class\", \"dismiss-action svelte-1vabcrr\");\n\t\t\tattr(div7, \"id\", \"dismiss-account-select\");\n\t\t\tattr(button, \"class\", \"connect-btn svelte-1vabcrr\");\n\t\t\tattr(button, \"id\", \"connect-accounts\");\n\t\t\tbutton.disabled = button_disabled_value = !/*accountSelected*/ ctx[1];\n\t\t\tattr(div8, \"class\", \"modal-controls svelte-1vabcrr\");\n\t\t\tattr(div9, \"class\", \"hardware-connect-modal svelte-1vabcrr\");\n\t\t\ttoggle_class(div9, \"account-select-modal-position\", !/*containerElement*/ ctx[11]);\n\t\t\tattr(div10, \"class\", \"container svelte-1vabcrr\");\n\t\t\ttoggle_class(div10, \"h-w-100\", !/*containerElement*/ ctx[11]);\n\t\t\ttoggle_class(div10, \"fixed\", !/*containerElement*/ ctx[11]);\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div10, anchor);\n\t\t\tappend(div10, div9);\n\t\t\tappend(div9, header);\n\t\t\tappend(header, div0);\n\t\t\tappend(header, t0);\n\t\t\tappend(header, div1);\n\t\t\tmount_component(closebutton, div1, null);\n\t\t\tappend(div9, t1);\n\t\t\tappend(div9, section0);\n\t\t\tappend(section0, div2);\n\t\t\tappend(div2, h40);\n\t\t\tappend(div2, t3);\n\t\t\tif (if_block0) if_block0.m(div2, null);\n\t\t\tappend(section0, t4);\n\t\t\tappend(section0, div3);\n\t\t\tappend(div3, h41);\n\t\t\tappend(div3, t6);\n\t\t\tappend(div3, select0);\n\n\t\t\tfor (let i = 0; i < each_blocks_1.length; i += 1) {\n\t\t\t\tif (each_blocks_1[i]) {\n\t\t\t\t\teach_blocks_1[i].m(select0, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tselect_option(select0, /*scanAccountOptions*/ ctx[6]['asset'], true);\n\t\t\tappend(section0, t7);\n\t\t\tappend(section0, div4);\n\t\t\tappend(div4, h42);\n\t\t\tappend(div4, t9);\n\t\t\tappend(div4, select1);\n\n\t\t\tfor (let i = 0; i < each_blocks.length; i += 1) {\n\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\teach_blocks[i].m(select1, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tselect_option(select1, /*scanAccountOptions*/ ctx[6]['chainId'], true);\n\t\t\tappend(div9, t10);\n\t\t\tappend(div9, section1);\n\t\t\tappend(section1, div5);\n\t\t\tmount_component(tableheader, div5, null);\n\t\t\tappend(div5, t11);\n\t\t\tmount_component(addresstable, div5, null);\n\t\t\tappend(div9, t12);\n\t\t\tappend(div9, section2);\n\t\t\tappend(section2, div6);\n\t\t\tif (if_block1) if_block1.m(div6, null);\n\t\t\tappend(div6, t13);\n\t\t\tif (if_block2) if_block2.m(div6, null);\n\t\t\tappend(section2, t14);\n\t\t\tappend(section2, div8);\n\t\t\tappend(div8, div7);\n\t\t\tappend(div8, t16);\n\t\t\tappend(div8, button);\n\t\t\tappend(button, t17);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(div1, \"click\", /*dismiss*/ ctx[17]),\n\t\t\t\t\tlisten(select0, \"change\", /*select0_change_handler*/ ctx[20]),\n\t\t\t\t\tlisten(select1, \"change\", /*select1_change_handler*/ ctx[21]),\n\t\t\t\t\tlisten(div7, \"click\", /*dismiss*/ ctx[17]),\n\t\t\t\t\tlisten(button, \"click\", /*connectAccounts*/ ctx[16])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(ctx, dirty) {\n\t\t\tif (current_block_type === (current_block_type = select_block_type(ctx)) && if_block0) {\n\t\t\t\tif_block0.p(ctx, dirty);\n\t\t\t} else {\n\t\t\t\tif (if_block0) if_block0.d(1);\n\t\t\t\tif_block0 = current_block_type && current_block_type(ctx);\n\n\t\t\t\tif (if_block0) {\n\t\t\t\t\tif_block0.c();\n\t\t\t\t\tif_block0.m(div2, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*assets*/ 256) {\n\t\t\t\teach_value_1 = /*assets*/ ctx[8];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value_1.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context_1(ctx, each_value_1, i);\n\n\t\t\t\t\tif (each_blocks_1[i]) {\n\t\t\t\t\t\teach_blocks_1[i].p(child_ctx, dirty);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks_1[i] = create_each_block_1(child_ctx);\n\t\t\t\t\t\teach_blocks_1[i].c();\n\t\t\t\t\t\teach_blocks_1[i].m(select0, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (; i < each_blocks_1.length; i += 1) {\n\t\t\t\t\teach_blocks_1[i].d(1);\n\t\t\t\t}\n\n\t\t\t\teach_blocks_1.length = each_value_1.length;\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*scanAccountOptions, assets*/ 320) {\n\t\t\t\tselect_option(select0, /*scanAccountOptions*/ ctx[6]['asset']);\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*chains*/ 512) {\n\t\t\t\teach_value = /*chains*/ ctx[9];\n\t\t\t\tlet i;\n\n\t\t\t\tfor (i = 0; i < each_value.length; i += 1) {\n\t\t\t\t\tconst child_ctx = get_each_context(ctx, each_value, i);\n\n\t\t\t\t\tif (each_blocks[i]) {\n\t\t\t\t\t\teach_blocks[i].p(child_ctx, dirty);\n\t\t\t\t\t} else {\n\t\t\t\t\t\teach_blocks[i] = create_each_block(child_ctx);\n\t\t\t\t\t\teach_blocks[i].c();\n\t\t\t\t\t\teach_blocks[i].m(select1, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (; i < each_blocks.length; i += 1) {\n\t\t\t\t\teach_blocks[i].d(1);\n\t\t\t\t}\n\n\t\t\t\teach_blocks.length = each_value.length;\n\t\t\t}\n\n\t\t\tif (dirty[0] & /*scanAccountOptions, assets*/ 320) {\n\t\t\t\tselect_option(select1, /*scanAccountOptions*/ ctx[6]['chainId']);\n\t\t\t}\n\n\t\t\tconst tableheader_changes = {};\n\t\t\tif (dirty[0] & /*loadingAccounts*/ 16) tableheader_changes.loadingAccounts = /*loadingAccounts*/ ctx[4];\n\t\t\tif (dirty[0] & /*errorFromScan*/ 32) tableheader_changes.errorFromScan = /*errorFromScan*/ ctx[5];\n\n\t\t\tif (!updating_showEmptyAddresses && dirty[0] & /*showEmptyAddresses*/ 8) {\n\t\t\t\tupdating_showEmptyAddresses = true;\n\t\t\t\ttableheader_changes.showEmptyAddresses = /*showEmptyAddresses*/ ctx[3];\n\t\t\t\tadd_flush_callback(() => updating_showEmptyAddresses = false);\n\t\t\t}\n\n\t\t\ttableheader.$set(tableheader_changes);\n\t\t\tconst addresstable_changes = {};\n\t\t\tif (dirty[0] & /*accountsListObject*/ 1) addresstable_changes.accountsListObject = /*accountsListObject*/ ctx[0];\n\t\t\tif (dirty[0] & /*showEmptyAddresses*/ 8) addresstable_changes.showEmptyAddresses = /*showEmptyAddresses*/ ctx[3];\n\n\t\t\tif (!updating_accountSelected && dirty[0] & /*accountSelected*/ 2) {\n\t\t\t\tupdating_accountSelected = true;\n\t\t\t\taddresstable_changes.accountSelected = /*accountSelected*/ ctx[1];\n\t\t\t\tadd_flush_callback(() => updating_accountSelected = false);\n\t\t\t}\n\n\t\t\taddresstable.$set(addresstable_changes);\n\n\t\t\tif (/*showEmptyAddresses*/ ctx[3]) {\n\t\t\t\tif (if_block1) {\n\t\t\t\t\tif_block1.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block1 = create_if_block_1(ctx);\n\t\t\t\t\tif_block1.c();\n\t\t\t\t\tif_block1.m(div6, t13);\n\t\t\t\t}\n\t\t\t} else if (if_block1) {\n\t\t\t\tif_block1.d(1);\n\t\t\t\tif_block1 = null;\n\t\t\t}\n\n\t\t\tif (!/*showEmptyAddresses*/ ctx[3]) {\n\t\t\t\tif (if_block2) {\n\t\t\t\t\tif_block2.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block2 = create_if_block$1(ctx);\n\t\t\t\t\tif_block2.c();\n\t\t\t\t\tif_block2.m(div6, null);\n\t\t\t\t}\n\t\t\t} else if (if_block2) {\n\t\t\t\tif_block2.d(1);\n\t\t\t\tif_block2 = null;\n\t\t\t}\n\n\t\t\tif (!current || dirty[0] & /*accountSelected*/ 2 && button_disabled_value !== (button_disabled_value = !/*accountSelected*/ ctx[1])) {\n\t\t\t\tbutton.disabled = button_disabled_value;\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(closebutton.$$.fragment, local);\n\t\t\ttransition_in(tableheader.$$.fragment, local);\n\t\t\ttransition_in(addresstable.$$.fragment, local);\n\n\t\t\tadd_render_callback(() => {\n\t\t\t\tif (!current) return;\n\t\t\t\tif (!div9_transition) div9_transition = create_bidirectional_transition(div9, fade, {}, true);\n\t\t\t\tdiv9_transition.run(1);\n\t\t\t});\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(closebutton.$$.fragment, local);\n\t\t\ttransition_out(tableheader.$$.fragment, local);\n\t\t\ttransition_out(addresstable.$$.fragment, local);\n\t\t\tif (!div9_transition) div9_transition = create_bidirectional_transition(div9, fade, {}, false);\n\t\t\tdiv9_transition.run(0);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div10);\n\t\t\tdestroy_component(closebutton);\n\n\t\t\tif (if_block0) {\n\t\t\t\tif_block0.d();\n\t\t\t}\n\n\t\t\tdestroy_each(each_blocks_1, detaching);\n\t\t\tdestroy_each(each_blocks, detaching);\n\t\t\tdestroy_component(tableheader);\n\t\t\tdestroy_component(addresstable);\n\t\t\tif (if_block1) if_block1.d();\n\t\t\tif (if_block2) if_block2.d();\n\t\t\tif (detaching && div9_transition) div9_transition.end();\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction instance$2($$self, $$props, $$invalidate) {\n\tlet { selectAccountOptions } = $$props;\n\tlet { accounts$ } = $$props;\n\tconst { basePaths, assets, chains, scanAccounts, supportsCustomPath = true, containerElement } = selectAccountOptions;\n\tlet accountsListObject;\n\tlet accountSelected;\n\tlet customDerivationPath = false;\n\tlet showEmptyAddresses = true;\n\tlet loadingAccounts = false;\n\tlet errorFromScan = '';\n\n\tlet scanAccountOptions = {\n\t\tderivationPath: basePaths[0] && basePaths[0].value || '',\n\t\tchainId: chains[0].id || '',\n\t\tasset: assets[0] || null\n\t};\n\n\tconst handleDerivationPathSelect = e => {\n\t\tlet selectVal = e.target.value;\n\t\tif (selectVal === 'customPath') return $$invalidate(2, customDerivationPath = true);\n\t\t$$invalidate(6, scanAccountOptions.derivationPath = selectVal, scanAccountOptions);\n\t};\n\n\tconst toggleDerivationPathToDropdown = () => {\n\t\t$$invalidate(2, customDerivationPath = false);\n\t\t$$invalidate(6, scanAccountOptions.derivationPath = basePaths[0].value, scanAccountOptions);\n\t};\n\n\tconst handleCustomPath = e => {\n\t\tlet inputVal = e.target.value;\n\t\t$$invalidate(6, scanAccountOptions.derivationPath = inputVal, scanAccountOptions);\n\t};\n\n\tconst scanAccountsWrap = async () => {\n\t\ttry {\n\t\t\t$$invalidate(5, errorFromScan = '');\n\t\t\t$$invalidate(4, loadingAccounts = true);\n\t\t\tconst allAccounts = await scanAccounts(scanAccountOptions);\n\n\t\t\t$$invalidate(0, accountsListObject = {\n\t\t\t\tall: allAccounts,\n\t\t\t\tfiltered: allAccounts.filter(account => {\n\t\t\t\t\treturn parseFloat((0,_web3_onboard_common__WEBPACK_IMPORTED_MODULE_0__.weiToEth)(account.balance.value.toString())) > 0;\n\t\t\t\t})\n\t\t\t});\n\n\t\t\t$$invalidate(4, loadingAccounts = false);\n\t\t} catch(err) {\n\t\t\tconst { message } = err;\n\n\t\t\tif (typeof message === 'string' && message.includes('could not detect network')) {\n\t\t\t\t$$invalidate(5, errorFromScan = 'There was an error detecting connected network from RPC endpoint');\n\t\t\t} else {\n\t\t\t\t$$invalidate(5, errorFromScan = message || 'There was an error scanning for accounts');\n\t\t\t}\n\n\t\t\t$$invalidate(4, loadingAccounts = false);\n\t\t}\n\t};\n\n\tconst connectAccounts = () => {\n\t\tif (!accountSelected) return;\n\t\taccounts$.next([accountSelected]);\n\t\tresetModal();\n\t};\n\n\tconst dismiss = () => {\n\t\taccounts$.next([]);\n\t\tresetModal();\n\t};\n\n\tconst resetModal = () => {\n\t\t$$invalidate(1, accountSelected = undefined);\n\t\t$$invalidate(0, accountsListObject = undefined);\n\t\t$$invalidate(3, showEmptyAddresses = true);\n\t\t$$invalidate(6, scanAccountOptions.derivationPath = basePaths[0] && basePaths[0].value || '', scanAccountOptions);\n\t};\n\n\tfunction select0_change_handler() {\n\t\tscanAccountOptions['asset'] = select_value(this);\n\t\t$$invalidate(6, scanAccountOptions);\n\t\t$$invalidate(8, assets);\n\t}\n\n\tfunction select1_change_handler() {\n\t\tscanAccountOptions['chainId'] = select_value(this);\n\t\t$$invalidate(6, scanAccountOptions);\n\t\t$$invalidate(8, assets);\n\t}\n\n\tfunction tableheader_showEmptyAddresses_binding(value) {\n\t\tshowEmptyAddresses = value;\n\t\t$$invalidate(3, showEmptyAddresses);\n\t}\n\n\tfunction addresstable_accountSelected_binding(value) {\n\t\taccountSelected = value;\n\t\t$$invalidate(1, accountSelected);\n\t}\n\n\t$$self.$$set = $$props => {\n\t\tif ('selectAccountOptions' in $$props) $$invalidate(18, selectAccountOptions = $$props.selectAccountOptions);\n\t\tif ('accounts$' in $$props) $$invalidate(19, accounts$ = $$props.accounts$);\n\t};\n\n\treturn [\n\t\taccountsListObject,\n\t\taccountSelected,\n\t\tcustomDerivationPath,\n\t\tshowEmptyAddresses,\n\t\tloadingAccounts,\n\t\terrorFromScan,\n\t\tscanAccountOptions,\n\t\tbasePaths,\n\t\tassets,\n\t\tchains,\n\t\tsupportsCustomPath,\n\t\tcontainerElement,\n\t\thandleDerivationPathSelect,\n\t\ttoggleDerivationPathToDropdown,\n\t\thandleCustomPath,\n\t\tscanAccountsWrap,\n\t\tconnectAccounts,\n\t\tdismiss,\n\t\tselectAccountOptions,\n\t\taccounts$,\n\t\tselect0_change_handler,\n\t\tselect1_change_handler,\n\t\ttableheader_showEmptyAddresses_binding,\n\t\taddresstable_accountSelected_binding\n\t];\n}\n\nclass AccountSelect extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$2, create_fragment$2, safe_not_equal, { selectAccountOptions: 18, accounts$: 19 }, add_css$2, [-1, -1]);\n\t}\n}\n\nconst accounts$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();\n\nconst basePath = joi__WEBPACK_IMPORTED_MODULE_1__.object({\n    label: joi__WEBPACK_IMPORTED_MODULE_1__.string().required(),\n    value: joi__WEBPACK_IMPORTED_MODULE_1__.string().required()\n});\nconst basePaths = joi__WEBPACK_IMPORTED_MODULE_1__.array().items(basePath);\nconst chains = joi__WEBPACK_IMPORTED_MODULE_1__.array().items(_web3_onboard_common__WEBPACK_IMPORTED_MODULE_0__.chainValidation);\nconst asset = joi__WEBPACK_IMPORTED_MODULE_1__.object({\n    label: joi__WEBPACK_IMPORTED_MODULE_1__.string().required(),\n    address: joi__WEBPACK_IMPORTED_MODULE_1__.string()\n});\nconst assets = joi__WEBPACK_IMPORTED_MODULE_1__.array().items(asset);\nconst selectAccountOptions = joi__WEBPACK_IMPORTED_MODULE_1__.object({\n    basePaths: basePaths,\n    assets: assets,\n    chains: chains,\n    scanAccounts: joi__WEBPACK_IMPORTED_MODULE_1__[\"function\"]().arity(1).required(),\n    supportsCustomPath: joi__WEBPACK_IMPORTED_MODULE_1__.bool(),\n    consecutiveEmptyAccountThreshold: joi__WEBPACK_IMPORTED_MODULE_1__.number(),\n    containerElement: joi__WEBPACK_IMPORTED_MODULE_1__.string()\n});\nconst validateSelectAccountOptions = (data) => {\n    return (0,_web3_onboard_common__WEBPACK_IMPORTED_MODULE_0__.validate)(selectAccountOptions, data);\n};\n\n// eslint-disable-next-line max-len\nconst accountSelect = async (options) => {\n    if (options) {\n        const error = validateSelectAccountOptions(options);\n        if (error) {\n            throw error;\n        }\n    }\n    const app = mountAccountSelect(options, accounts$);\n    accounts$.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_3__.take)(1)).subscribe(() => {\n        app.$destroy();\n    });\n    return (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.firstValueFrom)(accounts$);\n};\n// eslint-disable-next-line max-len\nconst mountAccountSelect = (selectAccountOptions, accounts$) => {\n    class AccountSelectEl extends HTMLElement {\n        constructor() {\n            super();\n        }\n    }\n    if (!customElements.get('account-select')) {\n        customElements.define('account-select', AccountSelectEl);\n    }\n    // add to DOM\n    const accountSelectDomElement = document.createElement('account-select');\n    const target = accountSelectDomElement.attachShadow({ mode: 'open' });\n    accountSelectDomElement.style.all = 'initial';\n    target.innerHTML = `\n    <style>\n      :host {\n        /* COLORS */\n        --white: white;\n        --black: black;\n        --primary-100: #eff1fc;\n        --primary-200: #d0d4f7;\n        --primary-300: #b1b8f2;\n        --primary-500: #6370e5;\n        --primary-600: #454ea0;\n        --gray-100: #ebebed;\n        --gray-200: #c2c4c9;\n        --gray-300: #999ca5;\n        --gray-500: #33394b;\n        --gray-700: #1a1d26;\n        --danger-500: #ff4f4f;\n\n        /* FONTS */\n        --font-family-normal: var(--w3o-font-family, Inter, sans-serif);\n        --font-size-5: 1rem;\n        --font-size-6: .875rem;\n        --font-size-7: .75rem;\n        --font-line-height-1: 24px;\n\n        /* SPACING */\n        --margin-4: 1rem;\n        --margin-5: 0.5rem;\n\n        /* MODAL POSITION */\n        --account-select-modal-z-index: 20;\n        --account-select-modal-top: unset;\n        --account-select-modal-right: unset;\n        --account-select-modal-bottom: unset;\n        --account-select-modal-left: unset;\n\n        /* SHADOWS */\n        --shadow-1: 0px 4px 12px rgba(0, 0, 0, 0.1);\n\n        /* THEMING */\n        --background-color: var(--w3o-background-color, #FFF);\n        --foreground-color: var(--w3o-foreground-color);\n        --text-color: var(--w3o-text-color, inherit);\n        --border-color: var(--w3o-border-color, var(--gray-200));\n        --action-color: var(--w3o-action-color, var(--primary-500));\n      }\n    </style>\n  `;\n    const containerElementQuery = selectAccountOptions.containerElement || 'body';\n    const containerElement = document.querySelector(containerElementQuery);\n    if (!containerElement) {\n        throw new Error(`Element with query ${containerElementQuery} does not exist.`);\n    }\n    containerElement.appendChild(accountSelectDomElement);\n    const app = new AccountSelect({\n        target: target,\n        props: {\n            selectAccountOptions,\n            accounts$\n        }\n    });\n    return app;\n};\n\n/* src/elements/Modal.svelte generated by Svelte v3.59.1 */\n\nfunction add_css$1(target) {\n\tappend_styles(target, \"svelte-xcex94\", \"aside.svelte-xcex94{display:flex;font-family:'Helvetica Neue', 'Helvetica', 'Arial', sans-serif;justify-content:center;align-items:center;position:fixed;font-size:16px;top:0;left:0;width:100vw;height:100vh;background:rgba(0, 0, 0, 0.3);z-index:var(--onboard-common-modal-index, 20)}@media screen and (max-width: 420px){aside.svelte-xcex94{font-size:14px}}section.svelte-xcex94{display:block;box-sizing:content-box;background:#ffffff;border-radius:10px;box-shadow:0 1px 5px 0 rgba(0, 0, 0, 0.1);font-family:inherit;font-size:inherit;padding:1.33em;position:relative;overflow:hidden;max-width:37em;color:#4a4a4a}div.svelte-xcex94{height:0.66em;position:absolute;padding:0.25em;top:1.33em;right:1.33em;font-size:inherit;font-family:inherit;border-radius:5px;transition:background 200ms ease-in-out;display:flex;justify-content:center;align-items:center}div.svelte-xcex94:hover{cursor:pointer;background:#eeeeee}svg.svelte-xcex94{width:10px;height:10px}\");\n}\n\n// (83:4) {#if closeable}\nfunction create_if_block(ctx) {\n\tlet div;\n\tlet svg;\n\tlet g0;\n\tlet path;\n\tlet g1;\n\tlet g2;\n\tlet g3;\n\tlet g4;\n\tlet g5;\n\tlet g6;\n\tlet g7;\n\tlet g8;\n\tlet g9;\n\tlet g10;\n\tlet g11;\n\tlet g12;\n\tlet g13;\n\tlet g14;\n\tlet g15;\n\tlet svg_fill_value;\n\tlet mounted;\n\tlet dispose;\n\n\treturn {\n\t\tc() {\n\t\t\tdiv = element(\"div\");\n\t\t\tsvg = svg_element(\"svg\");\n\t\t\tg0 = svg_element(\"g\");\n\t\t\tpath = svg_element(\"path\");\n\t\t\tg1 = svg_element(\"g\");\n\t\t\tg2 = svg_element(\"g\");\n\t\t\tg3 = svg_element(\"g\");\n\t\t\tg4 = svg_element(\"g\");\n\t\t\tg5 = svg_element(\"g\");\n\t\t\tg6 = svg_element(\"g\");\n\t\t\tg7 = svg_element(\"g\");\n\t\t\tg8 = svg_element(\"g\");\n\t\t\tg9 = svg_element(\"g\");\n\t\t\tg10 = svg_element(\"g\");\n\t\t\tg11 = svg_element(\"g\");\n\t\t\tg12 = svg_element(\"g\");\n\t\t\tg13 = svg_element(\"g\");\n\t\t\tg14 = svg_element(\"g\");\n\t\t\tg15 = svg_element(\"g\");\n\t\t\tattr(path, \"d\", \"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88\\n              c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242\\n              C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879\\n              s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\");\n\t\t\tattr(svg, \"xmlns\", \"http://www.w3.org/2000/svg\");\n\t\t\tattr(svg, \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\");\n\t\t\tattr(svg, \"x\", \"0px\");\n\t\t\tattr(svg, \"y\", \"0px\");\n\t\t\tattr(svg, \"viewBox\", \"0 0 47.971 47.971\");\n\t\t\tset_style(svg, \"enable-background\", \"new 0 0 47.971 47.971\");\n\t\t\tset_style(svg, \"transition\", \"fill 150ms ease-in-out\");\n\t\t\tattr(svg, \"fill\", svg_fill_value = /*closeHovered*/ ctx[2] ? '#4a4a4a' : '#9B9B9B');\n\t\t\tattr(svg, \"xml:space\", \"preserve\");\n\t\t\tattr(svg, \"class\", \"svelte-xcex94\");\n\t\t\tattr(div, \"class\", \"bn-onboard-custom bn-onboard-modal-content-close svelte-xcex94\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, div, anchor);\n\t\t\tappend(div, svg);\n\t\t\tappend(svg, g0);\n\t\t\tappend(g0, path);\n\t\t\tappend(svg, g1);\n\t\t\tappend(svg, g2);\n\t\t\tappend(svg, g3);\n\t\t\tappend(svg, g4);\n\t\t\tappend(svg, g5);\n\t\t\tappend(svg, g6);\n\t\t\tappend(svg, g7);\n\t\t\tappend(svg, g8);\n\t\t\tappend(svg, g9);\n\t\t\tappend(svg, g10);\n\t\t\tappend(svg, g11);\n\t\t\tappend(svg, g12);\n\t\t\tappend(svg, g13);\n\t\t\tappend(svg, g14);\n\t\t\tappend(svg, g15);\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(div, \"click\", function () {\n\t\t\t\t\t\tif (is_function(/*closeModal*/ ctx[0])) /*closeModal*/ ctx[0].apply(this, arguments);\n\t\t\t\t\t}),\n\t\t\t\t\tlisten(div, \"mouseenter\", /*mouseenter_handler*/ ctx[5]),\n\t\t\t\t\tlisten(div, \"mouseleave\", /*mouseleave_handler*/ ctx[6])\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, dirty) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (dirty & /*closeHovered*/ 4 && svg_fill_value !== (svg_fill_value = /*closeHovered*/ ctx[2] ? '#4a4a4a' : '#9B9B9B')) {\n\t\t\t\tattr(svg, \"fill\", svg_fill_value);\n\t\t\t}\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(div);\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nfunction create_fragment$1(ctx) {\n\tlet aside;\n\tlet section;\n\tlet t;\n\tlet aside_transition;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tconst default_slot_template = /*#slots*/ ctx[4].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[3], null);\n\tlet if_block = /*closeable*/ ctx[1] && create_if_block(ctx);\n\n\treturn {\n\t\tc() {\n\t\t\taside = element(\"aside\");\n\t\t\tsection = element(\"section\");\n\t\t\tif (default_slot) default_slot.c();\n\t\t\tt = space();\n\t\t\tif (if_block) if_block.c();\n\t\t\tattr(section, \"class\", \"bn-onboard-custom bn-onboard-modal-content svelte-xcex94\");\n\t\t\tattr(aside, \"class\", \"bn-onboard-custom bn-onboard-modal svelte-xcex94\");\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, aside, anchor);\n\t\t\tappend(aside, section);\n\n\t\t\tif (default_slot) {\n\t\t\t\tdefault_slot.m(section, null);\n\t\t\t}\n\n\t\t\tappend(section, t);\n\t\t\tif (if_block) if_block.m(section, null);\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = [\n\t\t\t\t\tlisten(section, \"click\", click_handler),\n\t\t\t\t\tlisten(aside, \"click\", function () {\n\t\t\t\t\t\tif (is_function(/*closeModal*/ ctx[0])) /*closeModal*/ ctx[0].apply(this, arguments);\n\t\t\t\t\t})\n\t\t\t\t];\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, [dirty]) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 8)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tdefault_slot,\n\t\t\t\t\t\tdefault_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[3],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[3])\n\t\t\t\t\t\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[3], dirty, null),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (/*closeable*/ ctx[1]) {\n\t\t\t\tif (if_block) {\n\t\t\t\t\tif_block.p(ctx, dirty);\n\t\t\t\t} else {\n\t\t\t\t\tif_block = create_if_block(ctx);\n\t\t\t\t\tif_block.c();\n\t\t\t\t\tif_block.m(section, null);\n\t\t\t\t}\n\t\t\t} else if (if_block) {\n\t\t\t\tif_block.d(1);\n\t\t\t\tif_block = null;\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(default_slot, local);\n\n\t\t\tadd_render_callback(() => {\n\t\t\t\tif (!current) return;\n\t\t\t\tif (!aside_transition) aside_transition = create_bidirectional_transition(aside, fade, {}, true);\n\t\t\t\taside_transition.run(1);\n\t\t\t});\n\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(default_slot, local);\n\t\t\tif (!aside_transition) aside_transition = create_bidirectional_transition(aside, fade, {}, false);\n\t\t\taside_transition.run(0);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(aside);\n\t\t\tif (default_slot) default_slot.d(detaching);\n\t\t\tif (if_block) if_block.d();\n\t\t\tif (detaching && aside_transition) aside_transition.end();\n\t\t\tmounted = false;\n\t\t\trun_all(dispose);\n\t\t}\n\t};\n}\n\nconst click_handler = e => e.stopPropagation();\n\nfunction instance$1($$self, $$props, $$invalidate) {\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\n\tlet { closeModal = () => {\n\t\t\n\t} } = $$props;\n\n\tlet { closeable = true } = $$props;\n\tlet closeHovered;\n\tconst mouseenter_handler = () => $$invalidate(2, closeHovered = true);\n\tconst mouseleave_handler = () => $$invalidate(2, closeHovered = false);\n\n\t$$self.$$set = $$props => {\n\t\tif ('closeModal' in $$props) $$invalidate(0, closeModal = $$props.closeModal);\n\t\tif ('closeable' in $$props) $$invalidate(1, closeable = $$props.closeable);\n\t\tif ('$$scope' in $$props) $$invalidate(3, $$scope = $$props.$$scope);\n\t};\n\n\treturn [\n\t\tcloseModal,\n\t\tcloseable,\n\t\tcloseHovered,\n\t\t$$scope,\n\t\tslots,\n\t\tmouseenter_handler,\n\t\tmouseleave_handler\n\t];\n}\n\nclass Modal extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\t\tinit(this, options, instance$1, create_fragment$1, safe_not_equal, { closeModal: 0, closeable: 1 }, add_css$1);\n\t}\n}\n\n/* src/elements/Button.svelte generated by Svelte v3.59.1 */\n\nfunction add_css(target) {\n\tappend_styles(target, \"svelte-3sw9wd\", \"button.svelte-3sw9wd{outline:none;background:inherit;font-size:0.889em;font-family:inherit;padding:0.55em 1.4em;cursor:pointer;color:#4a90e2;font-family:inherit;transition:background 150ms ease-in-out;line-height:1.15;opacity:1;transition:opacity 200ms}button.svelte-3sw9wd:focus{outline:none}.bn-onboard-prepare-button-right.svelte-3sw9wd{position:absolute;right:0}.bn-onboard-prepare-button-left.svelte-3sw9wd{position:absolute;left:0}.disabled.svelte-3sw9wd{cursor:inherit;pointer-events:none;opacity:0.4}.cta.svelte-3sw9wd{outline:1px solid #4a90e2;border-radius:40px}.cta.svelte-3sw9wd:hover{background:#ecf3fc}\");\n}\n\nfunction create_fragment(ctx) {\n\tlet button;\n\tlet current;\n\tlet mounted;\n\tlet dispose;\n\tconst default_slot_template = /*#slots*/ ctx[5].default;\n\tconst default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[4], null);\n\n\treturn {\n\t\tc() {\n\t\t\tbutton = element(\"button\");\n\t\t\tif (default_slot) default_slot.c();\n\t\t\tbutton.disabled = /*disabled*/ ctx[2];\n\t\t\tattr(button, \"class\", \"bn-onboard-custom bn-onboard-prepare-button svelte-3sw9wd\");\n\t\t\ttoggle_class(button, \"disabled\", /*disabled*/ ctx[2]);\n\t\t\ttoggle_class(button, \"cta\", /*cta*/ ctx[3]);\n\t\t\ttoggle_class(button, \"bn-onboard-prepare-button-right\", /*position*/ ctx[1] === 'right');\n\t\t\ttoggle_class(button, \"bn-onboard-prepare-button-left\", /*position*/ ctx[1] === 'left');\n\t\t\ttoggle_class(button, \"bn-onboard-prepare-button-center\", /*position*/ ctx[1] !== 'left' && /*position*/ ctx[1] !== 'right');\n\t\t},\n\t\tm(target, anchor) {\n\t\t\tinsert(target, button, anchor);\n\n\t\t\tif (default_slot) {\n\t\t\t\tdefault_slot.m(button, null);\n\t\t\t}\n\n\t\t\tcurrent = true;\n\n\t\t\tif (!mounted) {\n\t\t\t\tdispose = listen(button, \"click\", function () {\n\t\t\t\t\tif (is_function(/*onclick*/ ctx[0])) /*onclick*/ ctx[0].apply(this, arguments);\n\t\t\t\t});\n\n\t\t\t\tmounted = true;\n\t\t\t}\n\t\t},\n\t\tp(new_ctx, [dirty]) {\n\t\t\tctx = new_ctx;\n\n\t\t\tif (default_slot) {\n\t\t\t\tif (default_slot.p && (!current || dirty & /*$$scope*/ 16)) {\n\t\t\t\t\tupdate_slot_base(\n\t\t\t\t\t\tdefault_slot,\n\t\t\t\t\t\tdefault_slot_template,\n\t\t\t\t\t\tctx,\n\t\t\t\t\t\t/*$$scope*/ ctx[4],\n\t\t\t\t\t\t!current\n\t\t\t\t\t\t? get_all_dirty_from_scope(/*$$scope*/ ctx[4])\n\t\t\t\t\t\t: get_slot_changes(default_slot_template, /*$$scope*/ ctx[4], dirty, null),\n\t\t\t\t\t\tnull\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*disabled*/ 4) {\n\t\t\t\tbutton.disabled = /*disabled*/ ctx[2];\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*disabled*/ 4) {\n\t\t\t\ttoggle_class(button, \"disabled\", /*disabled*/ ctx[2]);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*cta*/ 8) {\n\t\t\t\ttoggle_class(button, \"cta\", /*cta*/ ctx[3]);\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*position*/ 2) {\n\t\t\t\ttoggle_class(button, \"bn-onboard-prepare-button-right\", /*position*/ ctx[1] === 'right');\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*position*/ 2) {\n\t\t\t\ttoggle_class(button, \"bn-onboard-prepare-button-left\", /*position*/ ctx[1] === 'left');\n\t\t\t}\n\n\t\t\tif (!current || dirty & /*position*/ 2) {\n\t\t\t\ttoggle_class(button, \"bn-onboard-prepare-button-center\", /*position*/ ctx[1] !== 'left' && /*position*/ ctx[1] !== 'right');\n\t\t\t}\n\t\t},\n\t\ti(local) {\n\t\t\tif (current) return;\n\t\t\ttransition_in(default_slot, local);\n\t\t\tcurrent = true;\n\t\t},\n\t\to(local) {\n\t\t\ttransition_out(default_slot, local);\n\t\t\tcurrent = false;\n\t\t},\n\t\td(detaching) {\n\t\t\tif (detaching) detach(button);\n\t\t\tif (default_slot) default_slot.d(detaching);\n\t\t\tmounted = false;\n\t\t\tdispose();\n\t\t}\n\t};\n}\n\nfunction instance($$self, $$props, $$invalidate) {\n\tlet { $$slots: slots = {}, $$scope } = $$props;\n\n\tlet { onclick = () => {\n\t\t\n\t} } = $$props;\n\n\tlet { position = '' } = $$props;\n\tlet { disabled = false } = $$props;\n\tlet { cta = true } = $$props;\n\n\t$$self.$$set = $$props => {\n\t\tif ('onclick' in $$props) $$invalidate(0, onclick = $$props.onclick);\n\t\tif ('position' in $$props) $$invalidate(1, position = $$props.position);\n\t\tif ('disabled' in $$props) $$invalidate(2, disabled = $$props.disabled);\n\t\tif ('cta' in $$props) $$invalidate(3, cta = $$props.cta);\n\t\tif ('$$scope' in $$props) $$invalidate(4, $$scope = $$props.$$scope);\n\t};\n\n\treturn [onclick, position, disabled, cta, $$scope, slots];\n}\n\nclass Button extends SvelteComponent {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tinit(\n\t\t\tthis,\n\t\t\toptions,\n\t\t\tinstance,\n\t\t\tcreate_fragment,\n\t\t\tsafe_not_equal,\n\t\t\t{\n\t\t\t\tonclick: 0,\n\t\t\t\tposition: 1,\n\t\t\t\tdisabled: 2,\n\t\t\t\tcta: 3\n\t\t\t},\n\t\t\tadd_css\n\t\t);\n\t}\n}\n\nconst HANDLE_PIN_PRESS = 'handlePinPress';\nconst BUTTON_COLOR = `#EBEBED`;\nconst BUTTON_DOT_COLOR = `#33394B`;\nconst pinButton = (value, slot, width = '64px', height = '64px') => `\n  <button\n    class=\"pin-button\"\n    style=\"width: ${width}; height: ${height};\"\n    type=\"button\"\n    onclick=\"window.${HANDLE_PIN_PRESS}(${value})\">\n      ${slot ||\n    `<svg class=\"pin-button-dot\" viewBox=\"0 0 18 18\" width=\"18\" height=\"18\">\n          <circle cx=\"9\" cy=\"9\" r=\"9\" ></circle>\n        </svg>`}\n      <div class=\"pin-button-bg\">\n  </button>\n`;\nconst pinButtons = `\n  <div class=\"pin-pad-buttons\">\n    ${[7, 8, 9, 4, 5, 6, 1, 2, 3].map(val => pinButton(val)).join('')}\n  </div>\n`;\nconst delButtonIcon = `<svg class=\"del-button-icon\" viewBox=\"0 0 24 24\" focusable=\"false\" class=\"chakra-icon css-onkibi\" aria-hidden=\"true\"><path fill=\"currentColor\" d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"></path></svg>`;\nconst pinPhraseInput = (modalType) => `\n<form id=\"pin-phrase-form\" class=\"pin-phrase-input-container\">\n  <input\n    id=\"pin-phrase-input\"\n    placeholder=\"${modalType === 'pin' ? 'PIN' : ''}\"\n    type=\"password\"\n    autocomplete=\"current-password\"\n  />\n  ${modalType === 'pin'\n    ? ` <div class=\"del-button-wrapper\">\n            ${pinButton(-1, delButtonIcon, '38px', '38px')}\n          </div>`\n    : ''}\n</form>\n`;\n// Contains styles used by both the pin\n// entry modal and the passphrase entry modal\nconst baseStyles = `\n  .keepkey-modal {\n    max-width: 22rem;\n    padding: 20px 10px;\n  }\n  .pin-phrase-input-container {\n    display: flex;\n    position: relative;\n    align-items: center;\n    margin: 20px 0;\n    width: 100%;\n  }\n  #pin-phrase-input {\n    background: inherit;\n    font-size: 0.889em;\n    font-family: inherit;\n    border-width: 1px;\n    border-style: solid;\n    border-color: #242835;\n    border-radius: 4px;\n    padding-left: 0.5rem;\n    padding-right: 4.1rem;\n    transition: opacity 150ms ease-in-out;\n    height: 42px;\n    width: 100%;\n    opacity: 0.6;\n    outline: none;\n  }\n  #pin-phrase-input:hover, #pin-phrase-input:focus {\n    opacity: 1;\n  }\n  .unlock-button {\n    height: 26px;\n    display: flex;\n    align-items: center;\n    width: 100%;\n    justify-content: center;\n  }\n  \n  /* Overrides the branding on the modal*/\n  .keepkey-modal + .bn-branding { visibility: hidden !important; }\n  .keepkey-modal .bn-onboard-prepare-button {\n    width: 100%;\n  }\n`;\nconst pinModalStyles = `\n  #entry {\n    align-items: center;\n    display: flex;\n    flex-flow: column;\n    padding: 20px;\n  }\n  .pin-pad-buttons {\n    display: grid;\n    grid-template-columns: repeat(3, 75px);\n    grid-template-rows: repeat(3, 75px);\n    align-items: center;\n    justify-items: center;\n    margin-bottom: 15px;\n  }\n  .pin-button {\n    align-items: center;\n    border-radius: 6px;\n    border: 1px solid ${BUTTON_COLOR};\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    font-size: 18px;\n    overflow: hidden;\n    padding: 0;\n    background-color: unset;\n    overflow: hidden;\n  }\n  .pin-button-bg {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    overflow: hidden;\n    background-color: ${BUTTON_COLOR};\n    transition: opacity 100ms ease-in;\n  }\n  .pin-button-bg:hover {\n    opacity: .2;\n  }\n  .pin-button-dot {\n    fill: ${BUTTON_DOT_COLOR};\n    position: absolute;\n    pointer-events: none;\n    z-index: 2;\n  }\n  .del-button-wrapper {\n    position: absolute;\n    height: 42px;\n    width: 42px;\n    right: 2px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .del-button-wrapper > .pin-button {\n    border: none;\n  }\n  .del-button-icon {\n    position: absolute;\n    width: 20px;\n    z-index: 2;\n    pointer-events: none;\n  }\n  .del-button-icon + div {\n    opacity: .5;\n  }\n  .del-button-icon + div:hover {\n    opacity: 1;\n  }\n`;\nconst passphraseModalStyles = `\n  .keepkey-modal {\n    padding: 40px 30px;\n  }\n`;\nconst pinHTML = `\n    <style>${baseStyles}${pinModalStyles}</style>\n    <h2>Enter Your Pin</h2>\n    <p>\n      Use PIN layout shown on your device to find the location to press on this pin pad.\n    </p>\n    <div id=\"entry\" class=\"bn-onboard-custom\">\n      ${pinButtons}\n      ${pinPhraseInput('pin')}\n    </div>\n  `;\nconst passphraseHTML = `\n  <style>${baseStyles}${passphraseModalStyles}</style>\n  <h2 style=\"margin-bottom: 35px\">Enter Your Passphrase</h2>\n  <div id=\"entry\" class=\"bn-onboard-custom\">\n    ${pinPhraseInput('passphrase')}\n  </div>\n`;\nconst entryModal = (modalType, submit, cancel, containerElement) => {\n    const modalHtml = modalType === 'pin' ? pinHTML : passphraseHTML;\n    const getInput = () => document.getElementById('pin-phrase-input');\n    const deleteWindowProperties = () => {\n        delete window[HANDLE_PIN_PRESS];\n    };\n    if (modalType === 'pin') {\n        window[HANDLE_PIN_PRESS] = (value) => {\n            const input = getInput();\n            // A value of -1 signals a backspace\n            // e.g. we delete the last char from the input\n            input.value =\n                value === -1 ? input.value.slice(0, -1) : input.value + value;\n        };\n    }\n    const containerElementQuery = containerElement || 'body';\n    const containerEl = document.querySelector(containerElementQuery);\n    if (!containerEl) {\n        throw new Error(`Element with query ${containerElementQuery} does not exist.`);\n    }\n    // Creates a modal component which gets\n    // mounted to the body and is passed the pin html into it's slot\n    const div = document.createElement('div');\n    div.innerHTML = modalHtml;\n    div.className = 'keepkey-modal';\n    const pinModal = new Modal({\n        target: containerEl,\n        props: {\n            closeModal: () => {\n                // Cancels any action that the keepkey wallet may be doing\n                cancel();\n                deleteWindowProperties();\n                pinModal.$destroy();\n            },\n            $$slots: createSlot(div),\n            $$scope: {}\n        }\n    });\n    // Submits the pin or passphrase to the Keepkey device\n    const submitValue = async () => {\n        const value = getInput().value;\n        submit(value);\n        pinModal.$destroy();\n    };\n    const pinPhraseForm = document.getElementById('pin-phrase-form');\n    pinPhraseForm &&\n        pinPhraseForm.addEventListener('submit', e => {\n            e.preventDefault();\n            submitValue();\n        });\n    // Creates a new Button component used to trigger sending the pin to Keepkey\n    const entryEl = document.getElementById('entry');\n    if (entryEl) {\n        const span = document.createElement('span');\n        span.innerHTML = `Unlock`;\n        span.className = `unlock-button`;\n        new Button({\n            target: entryEl,\n            props: {\n                onclick: async () => {\n                    submitValue();\n                    deleteWindowProperties();\n                },\n                $$slots: createSlot(span),\n                $$scope: {}\n            }\n        });\n    }\n};\n/**\n * createSlot - creates the necessary object needed to pass\n * arbitrary html into a component's default slot\n * @param element The html element which is inserted into the components slot\n */\nfunction createSlot(element) {\n    return {\n        default: [\n            function () {\n                return {\n                    c: noop,\n                    m: function mount(target, anchor) {\n                        insert(target, element, anchor);\n                    },\n                    d: function destroy(detaching) {\n                        if (detaching) {\n                            detach(element);\n                        }\n                    },\n                    l: noop\n                };\n            }\n        ]\n    };\n}\n\n/**\n * Creates the common instance used for signing\n * transactions with hardware wallets\n * @returns the initialized common instance\n */\nconst getCommon = async ({ customNetwork, chainId }) => {\n    const { default: Common, Hardfork } = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_ethereumjs_common_dist_browser_index_js\").then(__webpack_require__.t.bind(__webpack_require__, /*! @ethereumjs/common */ \"(app-pages-browser)/./node_modules/@ethereumjs/common/dist.browser/index.js\", 19));\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    const CommonConstructor = Common.default || Common;\n    const commonOptions = {\n        // Berlin is the minimum hardfork that will allow for EIP1559\n        hardfork: Hardfork.Berlin,\n        // List of supported EIPS\n        eips: [1559]\n    };\n    let common;\n    try {\n        common = new CommonConstructor({\n            chain: customNetwork || chainId,\n            ...commonOptions\n        });\n    }\n    catch (e) {\n        if (e.message && /Chain.*not supported/.test(e.message)) {\n            common = CommonConstructor.custom({ chainId }, commonOptions);\n        }\n        else {\n            throw e;\n        }\n    }\n    return common;\n};\n/**\n * Takes in TransactionRequest and converts all BigNumber values to strings\n * @param transaction\n * @returns a transaction where all BigNumber properties are now strings\n */\nconst bigNumberFieldsToStrings = (transaction) => Object.keys(transaction).reduce((transaction, txnProperty) => ({\n    ...transaction,\n    ...(transaction[txnProperty].toHexString\n        ? {\n            [txnProperty]: transaction[txnProperty].toHexString()\n        }\n        : {})\n}), transaction);\n/**\n * Helper method for hardware wallets to build an object\n * with a request method used for making rpc requests.\n * @param getRpcUrl - callback used to get the current chain's rpc url\n * @returns An object with a request method\n * to be called when making rpc requests\n */\nconst getHardwareWalletProvider = (getRpcUrl) => ({\n    request: ({ method, params }) => fetch(getRpcUrl(), {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            jsonrpc: '2.0',\n            id: '42',\n            method,\n            params\n        })\n    }).then(async (res) => {\n        const response = (await res.json());\n        if ('error' in response) {\n            throw response.error;\n        }\n        return response.result;\n    })\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@web3-onboard/hw-common/dist/index.js\n"));

/***/ })

}]);