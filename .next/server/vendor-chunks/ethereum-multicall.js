"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ethereum-multicall";
exports.ids = ["vendor-chunks/ethereum-multicall"];
exports.modules = {

/***/ "(ssr)/./node_modules/ethereum-multicall/dist/esm/enums/execution-type.js":
/*!**************************************************************************!*\
  !*** ./node_modules/ethereum-multicall/dist/esm/enums/execution-type.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExecutionType: () => (/* binding */ ExecutionType)\n/* harmony export */ });\nvar ExecutionType;\n(function (ExecutionType) {\n    ExecutionType[\"web3\"] = \"web3\";\n    ExecutionType[\"ethers\"] = \"ethers\";\n    ExecutionType[\"customHttp\"] = \"custom\";\n})(ExecutionType || (ExecutionType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tbXVsdGljYWxsL2Rpc3QvZXNtL2VudW1zL2V4ZWN1dGlvbi10eXBlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly96b3JvLy4vbm9kZV9tb2R1bGVzL2V0aGVyZXVtLW11bHRpY2FsbC9kaXN0L2VzbS9lbnVtcy9leGVjdXRpb24tdHlwZS5qcz80OTZjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgRXhlY3V0aW9uVHlwZTtcbihmdW5jdGlvbiAoRXhlY3V0aW9uVHlwZSkge1xuICAgIEV4ZWN1dGlvblR5cGVbXCJ3ZWIzXCJdID0gXCJ3ZWIzXCI7XG4gICAgRXhlY3V0aW9uVHlwZVtcImV0aGVyc1wiXSA9IFwiZXRoZXJzXCI7XG4gICAgRXhlY3V0aW9uVHlwZVtcImN1c3RvbUh0dHBcIl0gPSBcImN1c3RvbVwiO1xufSkoRXhlY3V0aW9uVHlwZSB8fCAoRXhlY3V0aW9uVHlwZSA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-multicall/dist/esm/enums/execution-type.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ethereum-multicall/dist/esm/enums/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/ethereum-multicall/dist/esm/enums/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ExecutionType: () => (/* reexport safe */ _execution_type__WEBPACK_IMPORTED_MODULE_0__.ExecutionType),\n/* harmony export */   Networks: () => (/* reexport safe */ _networks__WEBPACK_IMPORTED_MODULE_1__.Networks)\n/* harmony export */ });\n/* harmony import */ var _execution_type__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./execution-type */ \"(ssr)/./node_modules/ethereum-multicall/dist/esm/enums/execution-type.js\");\n/* harmony import */ var _networks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./networks */ \"(ssr)/./node_modules/ethereum-multicall/dist/esm/enums/networks.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tbXVsdGljYWxsL2Rpc3QvZXNtL2VudW1zL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBaUQ7QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL3pvcm8vLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tbXVsdGljYWxsL2Rpc3QvZXNtL2VudW1zL2luZGV4LmpzPzliN2UiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgRXhlY3V0aW9uVHlwZSB9IGZyb20gJy4vZXhlY3V0aW9uLXR5cGUnO1xuZXhwb3J0IHsgTmV0d29ya3MgfSBmcm9tICcuL25ldHdvcmtzJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-multicall/dist/esm/enums/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ethereum-multicall/dist/esm/enums/networks.js":
/*!********************************************************************!*\
  !*** ./node_modules/ethereum-multicall/dist/esm/enums/networks.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Networks: () => (/* binding */ Networks)\n/* harmony export */ });\nvar Networks;\n(function (Networks) {\n    Networks[Networks[\"mainnet\"] = 1] = \"mainnet\";\n    Networks[Networks[\"ropsten\"] = 3] = \"ropsten\";\n    Networks[Networks[\"rinkeby\"] = 4] = \"rinkeby\";\n    Networks[Networks[\"goerli\"] = 5] = \"goerli\";\n    Networks[Networks[\"optimism\"] = 10] = \"optimism\";\n    Networks[Networks[\"kovan\"] = 42] = \"kovan\";\n    Networks[Networks[\"matic\"] = 137] = \"matic\";\n    Networks[Networks[\"kovanOptimism\"] = 69] = \"kovanOptimism\";\n    Networks[Networks[\"xdai\"] = 100] = \"xdai\";\n    Networks[Networks[\"goerliOptimism\"] = 420] = \"goerliOptimism\";\n    Networks[Networks[\"arbitrum\"] = 42161] = \"arbitrum\";\n    Networks[Networks[\"rinkebyArbitrum\"] = 421611] = \"rinkebyArbitrum\";\n    Networks[Networks[\"goerliArbitrum\"] = 421613] = \"goerliArbitrum\";\n    Networks[Networks[\"mumbai\"] = 80001] = \"mumbai\";\n    Networks[Networks[\"sepolia\"] = 11155111] = \"sepolia\";\n    Networks[Networks[\"avalancheMainnet\"] = 43114] = \"avalancheMainnet\";\n    Networks[Networks[\"avalancheFuji\"] = 43113] = \"avalancheFuji\";\n    Networks[Networks[\"fantomTestnet\"] = 4002] = \"fantomTestnet\";\n    Networks[Networks[\"fantom\"] = 250] = \"fantom\";\n    Networks[Networks[\"bsc\"] = 56] = \"bsc\";\n    Networks[Networks[\"bsc_testnet\"] = 97] = \"bsc_testnet\";\n    Networks[Networks[\"moonbeam\"] = 1284] = \"moonbeam\";\n    Networks[Networks[\"moonriver\"] = 1285] = \"moonriver\";\n    Networks[Networks[\"moonbaseAlphaTestnet\"] = 1287] = \"moonbaseAlphaTestnet\";\n    Networks[Networks[\"harmony\"] = 1666600000] = \"harmony\";\n    Networks[Networks[\"cronos\"] = 25] = \"cronos\";\n    Networks[Networks[\"fuse\"] = 122] = \"fuse\";\n    Networks[Networks[\"songbirdCanaryNetwork\"] = 19] = \"songbirdCanaryNetwork\";\n    Networks[Networks[\"costonTestnet\"] = 16] = \"costonTestnet\";\n    Networks[Networks[\"boba\"] = 288] = \"boba\";\n    Networks[Networks[\"aurora\"] = 1313161554] = \"aurora\";\n    Networks[Networks[\"astar\"] = 592] = \"astar\";\n    Networks[Networks[\"okc\"] = 66] = \"okc\";\n    Networks[Networks[\"heco\"] = 128] = \"heco\";\n    Networks[Networks[\"metis\"] = 1088] = \"metis\";\n    Networks[Networks[\"rsk\"] = 30] = \"rsk\";\n    Networks[Networks[\"rskTestnet\"] = 31] = \"rskTestnet\";\n    Networks[Networks[\"evmos\"] = 9001] = \"evmos\";\n    Networks[Networks[\"evmosTestnet\"] = 9000] = \"evmosTestnet\";\n    Networks[Networks[\"thundercore\"] = 108] = \"thundercore\";\n    Networks[Networks[\"thundercoreTestnet\"] = 18] = \"thundercoreTestnet\";\n    Networks[Networks[\"oasis\"] = 26863] = \"oasis\";\n    Networks[Networks[\"celo\"] = 42220] = \"celo\";\n    Networks[Networks[\"godwoken\"] = 71402] = \"godwoken\";\n    Networks[Networks[\"godwokentestnet\"] = 71401] = \"godwokentestnet\";\n    Networks[Networks[\"klatyn\"] = 8217] = \"klatyn\";\n    Networks[Networks[\"milkomeda\"] = 2001] = \"milkomeda\";\n    Networks[Networks[\"kcc\"] = 321] = \"kcc\";\n    Networks[Networks[\"etherlite\"] = 111] = \"etherlite\";\n})(Networks || (Networks = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tbXVsdGljYWxsL2Rpc3QvZXNtL2VudW1zL25ldHdvcmtzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRCQUE0QiIsInNvdXJjZXMiOlsid2VicGFjazovL3pvcm8vLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tbXVsdGljYWxsL2Rpc3QvZXNtL2VudW1zL25ldHdvcmtzLmpzPzBmN2UiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBOZXR3b3JrcztcbihmdW5jdGlvbiAoTmV0d29ya3MpIHtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcIm1haW5uZXRcIl0gPSAxXSA9IFwibWFpbm5ldFwiO1xuICAgIE5ldHdvcmtzW05ldHdvcmtzW1wicm9wc3RlblwiXSA9IDNdID0gXCJyb3BzdGVuXCI7XG4gICAgTmV0d29ya3NbTmV0d29ya3NbXCJyaW5rZWJ5XCJdID0gNF0gPSBcInJpbmtlYnlcIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcImdvZXJsaVwiXSA9IDVdID0gXCJnb2VybGlcIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcIm9wdGltaXNtXCJdID0gMTBdID0gXCJvcHRpbWlzbVwiO1xuICAgIE5ldHdvcmtzW05ldHdvcmtzW1wia292YW5cIl0gPSA0Ml0gPSBcImtvdmFuXCI7XG4gICAgTmV0d29ya3NbTmV0d29ya3NbXCJtYXRpY1wiXSA9IDEzN10gPSBcIm1hdGljXCI7XG4gICAgTmV0d29ya3NbTmV0d29ya3NbXCJrb3Zhbk9wdGltaXNtXCJdID0gNjldID0gXCJrb3Zhbk9wdGltaXNtXCI7XG4gICAgTmV0d29ya3NbTmV0d29ya3NbXCJ4ZGFpXCJdID0gMTAwXSA9IFwieGRhaVwiO1xuICAgIE5ldHdvcmtzW05ldHdvcmtzW1wiZ29lcmxpT3B0aW1pc21cIl0gPSA0MjBdID0gXCJnb2VybGlPcHRpbWlzbVwiO1xuICAgIE5ldHdvcmtzW05ldHdvcmtzW1wiYXJiaXRydW1cIl0gPSA0MjE2MV0gPSBcImFyYml0cnVtXCI7XG4gICAgTmV0d29ya3NbTmV0d29ya3NbXCJyaW5rZWJ5QXJiaXRydW1cIl0gPSA0MjE2MTFdID0gXCJyaW5rZWJ5QXJiaXRydW1cIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcImdvZXJsaUFyYml0cnVtXCJdID0gNDIxNjEzXSA9IFwiZ29lcmxpQXJiaXRydW1cIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcIm11bWJhaVwiXSA9IDgwMDAxXSA9IFwibXVtYmFpXCI7XG4gICAgTmV0d29ya3NbTmV0d29ya3NbXCJzZXBvbGlhXCJdID0gMTExNTUxMTFdID0gXCJzZXBvbGlhXCI7XG4gICAgTmV0d29ya3NbTmV0d29ya3NbXCJhdmFsYW5jaGVNYWlubmV0XCJdID0gNDMxMTRdID0gXCJhdmFsYW5jaGVNYWlubmV0XCI7XG4gICAgTmV0d29ya3NbTmV0d29ya3NbXCJhdmFsYW5jaGVGdWppXCJdID0gNDMxMTNdID0gXCJhdmFsYW5jaGVGdWppXCI7XG4gICAgTmV0d29ya3NbTmV0d29ya3NbXCJmYW50b21UZXN0bmV0XCJdID0gNDAwMl0gPSBcImZhbnRvbVRlc3RuZXRcIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcImZhbnRvbVwiXSA9IDI1MF0gPSBcImZhbnRvbVwiO1xuICAgIE5ldHdvcmtzW05ldHdvcmtzW1wiYnNjXCJdID0gNTZdID0gXCJic2NcIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcImJzY190ZXN0bmV0XCJdID0gOTddID0gXCJic2NfdGVzdG5ldFwiO1xuICAgIE5ldHdvcmtzW05ldHdvcmtzW1wibW9vbmJlYW1cIl0gPSAxMjg0XSA9IFwibW9vbmJlYW1cIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcIm1vb25yaXZlclwiXSA9IDEyODVdID0gXCJtb29ucml2ZXJcIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcIm1vb25iYXNlQWxwaGFUZXN0bmV0XCJdID0gMTI4N10gPSBcIm1vb25iYXNlQWxwaGFUZXN0bmV0XCI7XG4gICAgTmV0d29ya3NbTmV0d29ya3NbXCJoYXJtb255XCJdID0gMTY2NjYwMDAwMF0gPSBcImhhcm1vbnlcIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcImNyb25vc1wiXSA9IDI1XSA9IFwiY3Jvbm9zXCI7XG4gICAgTmV0d29ya3NbTmV0d29ya3NbXCJmdXNlXCJdID0gMTIyXSA9IFwiZnVzZVwiO1xuICAgIE5ldHdvcmtzW05ldHdvcmtzW1wic29uZ2JpcmRDYW5hcnlOZXR3b3JrXCJdID0gMTldID0gXCJzb25nYmlyZENhbmFyeU5ldHdvcmtcIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcImNvc3RvblRlc3RuZXRcIl0gPSAxNl0gPSBcImNvc3RvblRlc3RuZXRcIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcImJvYmFcIl0gPSAyODhdID0gXCJib2JhXCI7XG4gICAgTmV0d29ya3NbTmV0d29ya3NbXCJhdXJvcmFcIl0gPSAxMzEzMTYxNTU0XSA9IFwiYXVyb3JhXCI7XG4gICAgTmV0d29ya3NbTmV0d29ya3NbXCJhc3RhclwiXSA9IDU5Ml0gPSBcImFzdGFyXCI7XG4gICAgTmV0d29ya3NbTmV0d29ya3NbXCJva2NcIl0gPSA2Nl0gPSBcIm9rY1wiO1xuICAgIE5ldHdvcmtzW05ldHdvcmtzW1wiaGVjb1wiXSA9IDEyOF0gPSBcImhlY29cIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcIm1ldGlzXCJdID0gMTA4OF0gPSBcIm1ldGlzXCI7XG4gICAgTmV0d29ya3NbTmV0d29ya3NbXCJyc2tcIl0gPSAzMF0gPSBcInJza1wiO1xuICAgIE5ldHdvcmtzW05ldHdvcmtzW1wicnNrVGVzdG5ldFwiXSA9IDMxXSA9IFwicnNrVGVzdG5ldFwiO1xuICAgIE5ldHdvcmtzW05ldHdvcmtzW1wiZXZtb3NcIl0gPSA5MDAxXSA9IFwiZXZtb3NcIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcImV2bW9zVGVzdG5ldFwiXSA9IDkwMDBdID0gXCJldm1vc1Rlc3RuZXRcIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcInRodW5kZXJjb3JlXCJdID0gMTA4XSA9IFwidGh1bmRlcmNvcmVcIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcInRodW5kZXJjb3JlVGVzdG5ldFwiXSA9IDE4XSA9IFwidGh1bmRlcmNvcmVUZXN0bmV0XCI7XG4gICAgTmV0d29ya3NbTmV0d29ya3NbXCJvYXNpc1wiXSA9IDI2ODYzXSA9IFwib2FzaXNcIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcImNlbG9cIl0gPSA0MjIyMF0gPSBcImNlbG9cIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcImdvZHdva2VuXCJdID0gNzE0MDJdID0gXCJnb2R3b2tlblwiO1xuICAgIE5ldHdvcmtzW05ldHdvcmtzW1wiZ29kd29rZW50ZXN0bmV0XCJdID0gNzE0MDFdID0gXCJnb2R3b2tlbnRlc3RuZXRcIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcImtsYXR5blwiXSA9IDgyMTddID0gXCJrbGF0eW5cIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcIm1pbGtvbWVkYVwiXSA9IDIwMDFdID0gXCJtaWxrb21lZGFcIjtcbiAgICBOZXR3b3Jrc1tOZXR3b3Jrc1tcImtjY1wiXSA9IDMyMV0gPSBcImtjY1wiO1xuICAgIE5ldHdvcmtzW05ldHdvcmtzW1wiZXRoZXJsaXRlXCJdID0gMTExXSA9IFwiZXRoZXJsaXRlXCI7XG59KShOZXR3b3JrcyB8fCAoTmV0d29ya3MgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-multicall/dist/esm/enums/networks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ethereum-multicall/dist/esm/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/ethereum-multicall/dist/esm/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Multicall: () => (/* reexport safe */ _multicall__WEBPACK_IMPORTED_MODULE_1__.Multicall)\n/* harmony export */ });\n/* harmony import */ var _models_multicall_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./models/multicall-options */ \"(ssr)/./node_modules/ethereum-multicall/dist/esm/models/multicall-options.js\");\n/* harmony import */ var _multicall__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multicall */ \"(ssr)/./node_modules/ethereum-multicall/dist/esm/multicall.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tbXVsdGljYWxsL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vem9yby8uL25vZGVfbW9kdWxlcy9ldGhlcmV1bS1tdWx0aWNhbGwvZGlzdC9lc20vaW5kZXguanM/YmIxZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL21vZGVscy9tdWx0aWNhbGwtb3B0aW9ucyc7XG5leHBvcnQgeyBNdWx0aWNhbGwgfSBmcm9tICcuL211bHRpY2FsbCc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-multicall/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ethereum-multicall/dist/esm/models/multicall-options.js":
/*!******************************************************************************!*\
  !*** ./node_modules/ethereum-multicall/dist/esm/models/multicall-options.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tbXVsdGljYWxsL2Rpc3QvZXNtL21vZGVscy9tdWx0aWNhbGwtb3B0aW9ucy5qcyIsIm1hcHBpbmdzIjoiO0FBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly96b3JvLy4vbm9kZV9tb2R1bGVzL2V0aGVyZXVtLW11bHRpY2FsbC9kaXN0L2VzbS9tb2RlbHMvbXVsdGljYWxsLW9wdGlvbnMuanM/OGVjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-multicall/dist/esm/models/multicall-options.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ethereum-multicall/dist/esm/multicall.js":
/*!***************************************************************!*\
  !*** ./node_modules/ethereum-multicall/dist/esm/multicall.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Multicall: () => (/* binding */ Multicall)\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/ethers/node_modules/@ethersproject/abi/lib.esm/interface.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/@ethersproject/contracts/lib.esm/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/@ethersproject/constants/lib.esm/addresses.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/@ethersproject/providers/lib.esm/index.js\");\n/* harmony import */ var ethers_lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ethers/lib/utils */ \"(ssr)/./node_modules/ethers/lib/utils.js\");\n/* harmony import */ var ethers_lib_utils__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(ethers_lib_utils__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _enums__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./enums */ \"(ssr)/./node_modules/ethereum-multicall/dist/esm/enums/index.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/ethereum-multicall/dist/esm/utils.js\");\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\n\nvar Multicall = /** @class */ (function () {\n    function Multicall(_options) {\n        this._options = _options;\n        this.ABI = [\n            {\n                constant: false,\n                inputs: [\n                    {\n                        components: [\n                            { name: 'target', type: 'address' },\n                            { name: 'callData', type: 'bytes' },\n                        ],\n                        name: 'calls',\n                        type: 'tuple[]',\n                    },\n                ],\n                name: 'aggregate',\n                outputs: [\n                    { name: 'blockNumber', type: 'uint256' },\n                    { name: 'returnData', type: 'bytes[]' },\n                ],\n                payable: false,\n                stateMutability: 'nonpayable',\n                type: 'function',\n            },\n            {\n                inputs: [\n                    {\n                        internalType: 'bool',\n                        name: 'requireSuccess',\n                        type: 'bool',\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: 'address',\n                                name: 'target',\n                                type: 'address',\n                            },\n                            {\n                                internalType: 'bytes',\n                                name: 'callData',\n                                type: 'bytes',\n                            },\n                        ],\n                        internalType: 'struct Multicall2.Call[]',\n                        name: 'calls',\n                        type: 'tuple[]',\n                    },\n                ],\n                name: 'tryBlockAndAggregate',\n                outputs: [\n                    {\n                        internalType: 'uint256',\n                        name: 'blockNumber',\n                        type: 'uint256',\n                    },\n                    {\n                        internalType: 'bytes32',\n                        name: 'blockHash',\n                        type: 'bytes32',\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: 'bool',\n                                name: 'success',\n                                type: 'bool',\n                            },\n                            {\n                                internalType: 'bytes',\n                                name: 'returnData',\n                                type: 'bytes',\n                            },\n                        ],\n                        internalType: 'struct Multicall2.Result[]',\n                        name: 'returnData',\n                        type: 'tuple[]',\n                    },\n                ],\n                stateMutability: 'nonpayable',\n                type: 'function',\n            },\n        ];\n        if (this._options.web3Instance) {\n            this._executionType = _enums__WEBPACK_IMPORTED_MODULE_0__.ExecutionType.web3;\n            return;\n        }\n        if (this._options.ethersProvider) {\n            this._executionType = _enums__WEBPACK_IMPORTED_MODULE_0__.ExecutionType.ethers;\n            return;\n        }\n        if (this._options.nodeUrl) {\n            this._executionType = _enums__WEBPACK_IMPORTED_MODULE_0__.ExecutionType.customHttp;\n            return;\n        }\n        throw new Error(\n        // tslint:disable-next-line: max-line-length\n        'Your options passed in our incorrect they need to match either `MulticallOptionsEthers`, `MulticallOptionsWeb3` or `MulticallOptionsCustomJsonRpcProvider` interfaces');\n    }\n    /**\n     * Call all the contract calls in 1\n     * @param calls The calls\n     */\n    Multicall.prototype.call = function (contractCallContexts, contractCallOptions) {\n        if (contractCallOptions === void 0) { contractCallOptions = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var aggregateResponse, returnObject, response, contractCallsResults, originalContractCallContext, returnObjectResult, method, methodContext, originalContractCallMethodContext, outputTypes, decodedReturnValues;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!Array.isArray(contractCallContexts)) {\n                            contractCallContexts = [contractCallContexts];\n                        }\n                        return [4 /*yield*/, this.execute(this.buildAggregateCallContext(contractCallContexts), contractCallOptions)];\n                    case 1:\n                        aggregateResponse = _a.sent();\n                        returnObject = {\n                            results: {},\n                            blockNumber: aggregateResponse.blockNumber,\n                        };\n                        for (response = 0; response < aggregateResponse.results.length; response++) {\n                            contractCallsResults = aggregateResponse.results[response];\n                            originalContractCallContext = contractCallContexts[contractCallsResults.contractContextIndex];\n                            returnObjectResult = {\n                                originalContractCallContext: _utils__WEBPACK_IMPORTED_MODULE_1__.Utils.deepClone(originalContractCallContext),\n                                callsReturnContext: [],\n                            };\n                            for (method = 0; method < contractCallsResults.methodResults.length; method++) {\n                                methodContext = contractCallsResults.methodResults[method];\n                                originalContractCallMethodContext = originalContractCallContext.calls[methodContext.contractMethodIndex];\n                                outputTypes = this.findOutputTypesFromAbi(originalContractCallContext.abi, originalContractCallMethodContext.methodName);\n                                if (this._options.tryAggregate && !methodContext.result.success) {\n                                    returnObjectResult.callsReturnContext.push(_utils__WEBPACK_IMPORTED_MODULE_1__.Utils.deepClone({\n                                        returnValues: [],\n                                        decoded: false,\n                                        reference: originalContractCallMethodContext.reference,\n                                        methodName: originalContractCallMethodContext.methodName,\n                                        methodParameters: originalContractCallMethodContext.methodParameters,\n                                        success: false,\n                                    }));\n                                    continue;\n                                }\n                                if (outputTypes && outputTypes.length > 0) {\n                                    try {\n                                        decodedReturnValues = ethers_lib_utils__WEBPACK_IMPORTED_MODULE_2__.defaultAbiCoder.decode(\n                                        // tslint:disable-next-line: no-any\n                                        outputTypes, this.getReturnDataFromResult(methodContext.result));\n                                        returnObjectResult.callsReturnContext.push(_utils__WEBPACK_IMPORTED_MODULE_1__.Utils.deepClone({\n                                            returnValues: this.formatReturnValues(decodedReturnValues),\n                                            decoded: true,\n                                            reference: originalContractCallMethodContext.reference,\n                                            methodName: originalContractCallMethodContext.methodName,\n                                            methodParameters: originalContractCallMethodContext.methodParameters,\n                                            success: true,\n                                        }));\n                                    }\n                                    catch (e) {\n                                        if (!this._options.tryAggregate) {\n                                            throw e;\n                                        }\n                                        returnObjectResult.callsReturnContext.push(_utils__WEBPACK_IMPORTED_MODULE_1__.Utils.deepClone({\n                                            returnValues: [],\n                                            decoded: false,\n                                            reference: originalContractCallMethodContext.reference,\n                                            methodName: originalContractCallMethodContext.methodName,\n                                            methodParameters: originalContractCallMethodContext.methodParameters,\n                                            success: false,\n                                        }));\n                                    }\n                                }\n                                else {\n                                    returnObjectResult.callsReturnContext.push(_utils__WEBPACK_IMPORTED_MODULE_1__.Utils.deepClone({\n                                        returnValues: this.getReturnDataFromResult(methodContext.result),\n                                        decoded: false,\n                                        reference: originalContractCallMethodContext.reference,\n                                        methodName: originalContractCallMethodContext.methodName,\n                                        methodParameters: originalContractCallMethodContext.methodParameters,\n                                        success: true,\n                                    }));\n                                }\n                            }\n                            returnObject.results[returnObjectResult.originalContractCallContext.reference] = returnObjectResult;\n                        }\n                        return [2 /*return*/, returnObject];\n                }\n            });\n        });\n    };\n    /**\n     * Get return data from result\n     * @param result The result\n     */\n    // tslint:disable-next-line: no-any\n    Multicall.prototype.getReturnDataFromResult = function (result) {\n        if (this._options.tryAggregate) {\n            return result.returnData;\n        }\n        return result;\n    };\n    /**\n     * Format return values so its always an array\n     * @param decodedReturnValues The decoded return values\n     */\n    // tslint:disable-next-line: no-any\n    Multicall.prototype.formatReturnValues = function (decodedReturnValues) {\n        var decodedReturnResults = decodedReturnValues;\n        if (decodedReturnValues.length === 1) {\n            decodedReturnResults = decodedReturnValues[0];\n        }\n        if (Array.isArray(decodedReturnResults)) {\n            return decodedReturnResults;\n        }\n        return [decodedReturnResults];\n    };\n    /**\n     * Build aggregate call context\n     * @param contractCallContexts The contract call contexts\n     */\n    Multicall.prototype.buildAggregateCallContext = function (contractCallContexts) {\n        var aggregateCallContext = [];\n        for (var contract = 0; contract < contractCallContexts.length; contract++) {\n            var contractContext = contractCallContexts[contract];\n            var executingInterface = new ethers__WEBPACK_IMPORTED_MODULE_3__.Interface(JSON.stringify(contractContext.abi));\n            for (var method = 0; method < contractContext.calls.length; method++) {\n                // https://github.com/ethers-io/ethers.js/issues/211\n                var methodContext = contractContext.calls[method];\n                // tslint:disable-next-line: no-unused-expression\n                var encodedData = executingInterface.encodeFunctionData(methodContext.methodName, methodContext.methodParameters);\n                aggregateCallContext.push({\n                    contractContextIndex: _utils__WEBPACK_IMPORTED_MODULE_1__.Utils.deepClone(contract),\n                    contractMethodIndex: _utils__WEBPACK_IMPORTED_MODULE_1__.Utils.deepClone(method),\n                    target: contractContext.contractAddress,\n                    encodedData: encodedData,\n                });\n            }\n        }\n        return aggregateCallContext;\n    };\n    /**\n     * Find output types from abi\n     * @param abi The abi\n     * @param methodName The method name\n     */\n    Multicall.prototype.findOutputTypesFromAbi = function (abi, methodName) {\n        var _a;\n        var contract = new ethers__WEBPACK_IMPORTED_MODULE_4__.Contract(ethers__WEBPACK_IMPORTED_MODULE_5__.AddressZero, abi);\n        methodName = methodName.trim();\n        if (contract.interface.functions[methodName]) {\n            return contract.interface.functions[methodName].outputs;\n        }\n        for (var i = 0; i < abi.length; i++) {\n            if (((_a = abi[i].name) === null || _a === void 0 ? void 0 : _a.trim()) === methodName) {\n                return abi[i].outputs;\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Execute the multicall contract call\n     * @param calls The calls\n     */\n    Multicall.prototype.execute = function (calls, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this._executionType;\n                        switch (_a) {\n                            case _enums__WEBPACK_IMPORTED_MODULE_0__.ExecutionType.web3: return [3 /*break*/, 1];\n                            case _enums__WEBPACK_IMPORTED_MODULE_0__.ExecutionType.ethers: return [3 /*break*/, 3];\n                            case _enums__WEBPACK_IMPORTED_MODULE_0__.ExecutionType.customHttp: return [3 /*break*/, 3];\n                        }\n                        return [3 /*break*/, 5];\n                    case 1: return [4 /*yield*/, this.executeWithWeb3(calls, options)];\n                    case 2: return [2 /*return*/, _b.sent()];\n                    case 3: return [4 /*yield*/, this.executeWithEthersOrCustom(calls, options)];\n                    case 4: return [2 /*return*/, _b.sent()];\n                    case 5: throw new Error(this._executionType + \" is not defined\");\n                }\n            });\n        });\n    };\n    /**\n     * Execute aggregate with web3 instance\n     * @param calls The calls context\n     */\n    Multicall.prototype.executeWithWeb3 = function (calls, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var web3, networkId, contract, callParams, contractResponse, contractResponse;\n            var _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        web3 = this.getTypedOptions().web3Instance;\n                        return [4 /*yield*/, web3.eth.net.getId()];\n                    case 1:\n                        networkId = _c.sent();\n                        contract = new web3.eth.Contract(this.ABI, this.getContractBasedOnNetwork(networkId));\n                        callParams = [];\n                        if (options.blockNumber) {\n                            callParams.push(options.blockNumber);\n                        }\n                        if (!this._options.tryAggregate) return [3 /*break*/, 3];\n                        return [4 /*yield*/, (_a = contract.methods\n                                .tryBlockAndAggregate(false, this.mapCallContextToMatchContractFormat(calls)))\n                                .call.apply(_a, callParams)];\n                    case 2:\n                        contractResponse = (_c.sent());\n                        contractResponse.blockNumber = ethers__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from(contractResponse.blockNumber);\n                        return [2 /*return*/, this.buildUpAggregateResponse(contractResponse, calls)];\n                    case 3: return [4 /*yield*/, (_b = contract.methods\n                            .aggregate(this.mapCallContextToMatchContractFormat(calls)))\n                            .call.apply(_b, callParams)];\n                    case 4:\n                        contractResponse = (_c.sent());\n                        contractResponse.blockNumber = ethers__WEBPACK_IMPORTED_MODULE_6__.BigNumber.from(contractResponse.blockNumber);\n                        return [2 /*return*/, this.buildUpAggregateResponse(contractResponse, calls)];\n                }\n            });\n        });\n    };\n    /**\n     * Execute with ethers using passed in provider context or custom one\n     * @param calls The calls\n     */\n    Multicall.prototype.executeWithEthersOrCustom = function (calls, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var ethersProvider, customProvider, network, contract, overrideOptions, contractResponse, contractResponse;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        ethersProvider = this.getTypedOptions()\n                            .ethersProvider;\n                        if (!ethersProvider) {\n                            customProvider = this.getTypedOptions();\n                            if (customProvider.nodeUrl) {\n                                ethersProvider = new ethers__WEBPACK_IMPORTED_MODULE_7__.JsonRpcProvider(customProvider.nodeUrl);\n                            }\n                            else {\n                                ethersProvider = ethers__WEBPACK_IMPORTED_MODULE_8__.getDefaultProvider();\n                            }\n                        }\n                        return [4 /*yield*/, ethersProvider.getNetwork()];\n                    case 1:\n                        network = _a.sent();\n                        contract = new ethers__WEBPACK_IMPORTED_MODULE_4__.Contract(this.getContractBasedOnNetwork(network.chainId), this.ABI, ethersProvider);\n                        overrideOptions = {};\n                        if (options.blockNumber) {\n                            overrideOptions = __assign(__assign({}, overrideOptions), { blockTag: Number(options.blockNumber) });\n                        }\n                        if (!this._options.tryAggregate) return [3 /*break*/, 3];\n                        return [4 /*yield*/, contract.callStatic.tryBlockAndAggregate(false, this.mapCallContextToMatchContractFormat(calls), overrideOptions)];\n                    case 2:\n                        contractResponse = (_a.sent());\n                        return [2 /*return*/, this.buildUpAggregateResponse(contractResponse, calls)];\n                    case 3: return [4 /*yield*/, contract.callStatic.aggregate(this.mapCallContextToMatchContractFormat(calls), overrideOptions)];\n                    case 4:\n                        contractResponse = (_a.sent());\n                        return [2 /*return*/, this.buildUpAggregateResponse(contractResponse, calls)];\n                }\n            });\n        });\n    };\n    /**\n     * Build up the aggregated response from the contract response mapping\n     * metadata from the calls\n     * @param contractResponse The contract response\n     * @param calls The calls\n     */\n    Multicall.prototype.buildUpAggregateResponse = function (contractResponse, calls) {\n        var aggregateResponse = {\n            blockNumber: contractResponse.blockNumber.toNumber(),\n            results: [],\n        };\n        var _loop_1 = function (i) {\n            var existingResponse = aggregateResponse.results.find(function (c) { return c.contractContextIndex === calls[i].contractContextIndex; });\n            if (existingResponse) {\n                existingResponse.methodResults.push({\n                    result: contractResponse.returnData[i],\n                    contractMethodIndex: calls[i].contractMethodIndex,\n                });\n            }\n            else {\n                aggregateResponse.results.push({\n                    methodResults: [\n                        {\n                            result: contractResponse.returnData[i],\n                            contractMethodIndex: calls[i].contractMethodIndex,\n                        },\n                    ],\n                    contractContextIndex: calls[i].contractContextIndex,\n                });\n            }\n        };\n        for (var i = 0; i < contractResponse.returnData.length; i++) {\n            _loop_1(i);\n        }\n        return aggregateResponse;\n    };\n    /**\n     * Map call contract to match contract format\n     * @param calls The calls context\n     */\n    Multicall.prototype.mapCallContextToMatchContractFormat = function (calls) {\n        return calls.map(function (call) {\n            return {\n                target: call.target,\n                callData: call.encodedData,\n            };\n        });\n    };\n    /**\n     * Get typed options\n     */\n    Multicall.prototype.getTypedOptions = function () {\n        return this._options;\n    };\n    /**\n     * Get the contract based on the network\n     * @param tryAggregate The tryAggregate\n     * @param network The network\n     */\n    Multicall.prototype.getContractBasedOnNetwork = function (network) {\n        // if they have overriden the multicall custom contract address then use that\n        if (this._options.multicallCustomContractAddress) {\n            return this._options.multicallCustomContractAddress;\n        }\n        switch (network) {\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.mainnet:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.ropsten:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.rinkeby:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.goerli:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.optimism:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.kovan:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.matic:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.kovanOptimism:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.xdai:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.goerliOptimism:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.arbitrum:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.rinkebyArbitrum:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.goerliArbitrum:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.mumbai:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.sepolia:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.avalancheMainnet:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.avalancheFuji:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.fantomTestnet:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.fantom:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.bsc:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.bsc_testnet:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.moonbeam:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.moonriver:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.moonbaseAlphaTestnet:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.harmony:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.cronos:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.fuse:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.songbirdCanaryNetwork:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.costonTestnet:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.boba:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.aurora:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.astar:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.okc:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.heco:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.metis:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.rsk:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.rskTestnet:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.evmos:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.evmosTestnet:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.thundercore:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.thundercoreTestnet:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.oasis:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.celo:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.godwoken:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.godwokentestnet:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.klatyn:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.milkomeda:\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.kcc:\n                return '0xcA11bde05977b3631167028862bE2a173976CA11';\n            case _enums__WEBPACK_IMPORTED_MODULE_0__.Networks.etherlite:\n                return '0x21681750D7ddCB8d1240eD47338dC984f94AF2aC';\n            default:\n                throw new Error(\"Network - \" + network + \" doesn't have a multicall contract address defined. Please check your network or deploy your own contract on it.\");\n        }\n    };\n    return Multicall;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-multicall/dist/esm/multicall.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/ethereum-multicall/dist/esm/utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/ethereum-multicall/dist/esm/utils.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Utils: () => (/* binding */ Utils)\n/* harmony export */ });\nvar Utils = /** @class */ (function () {\n    function Utils() {\n    }\n    /**\n     * Deep clone a object\n     * @param object The object\n     */\n    Utils.deepClone = function (object) {\n        return JSON.parse(JSON.stringify(object));\n    };\n    return Utils;\n}());\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tbXVsdGljYWxsL2Rpc3QvZXNtL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNnQiIsInNvdXJjZXMiOlsid2VicGFjazovL3pvcm8vLi9ub2RlX21vZHVsZXMvZXRoZXJldW0tbXVsdGljYWxsL2Rpc3QvZXNtL3V0aWxzLmpzP2Q0MmMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIFV0aWxzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFV0aWxzKCkge1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWVwIGNsb25lIGEgb2JqZWN0XG4gICAgICogQHBhcmFtIG9iamVjdCBUaGUgb2JqZWN0XG4gICAgICovXG4gICAgVXRpbHMuZGVlcENsb25lID0gZnVuY3Rpb24gKG9iamVjdCkge1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShvYmplY3QpKTtcbiAgICB9O1xuICAgIHJldHVybiBVdGlscztcbn0oKSk7XG5leHBvcnQgeyBVdGlscyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ethereum-multicall/dist/esm/utils.js\n");

/***/ })

};
;